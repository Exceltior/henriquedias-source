<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on Henrique Dias</title>
    <link>https://henriquedias.com/categories/tutorials/</link>
    <description>Recent content in Tutorials on Henrique Dias</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jun 2015 11:27:37 +0000</lastBuildDate>
    <atom:link href="https://henriquedias.com/categories/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>WordPress: adicionar menus de administração [Parte 2]</title>
      <link>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao-parte-2</link>
      <pubDate>Wed, 10 Jun 2015 11:27:37 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao-parte-2</guid>
      <description>&lt;p&gt;O &lt;strong&gt;WordPress&lt;/strong&gt; é, como vocês sabem, um dos mais populares CMS do mundo. Isto, se não o for. Um dos nossos primeiros artigos foi referente ao WordPress e ensinámos a &lt;a href=&#34;https://henriquedias.com/tutorials/remover-hash-dos-links-continuar-a-ler/&#34;&gt;remover a hash dos links &amp;ldquo;Ler mais&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hoje vamos dar continuação ao tutorial sobre como &lt;a href=&#34;https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao/&#34;&gt;adicionar menus de administração&lt;/a&gt; a temas e plugins do WordPress.&lt;/p&gt;

&lt;p&gt;Na primeira parte, criámos duas funções e adicionámos uma opção ao menu de administração do WordPress sendo que ficámos com o seguinte código:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_admin_menus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//Adição do sub-menu Opções ao menu principal Apresentação&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;add_theme_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;manage_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;opcoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;themeslug_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//Esta função vai conter a página &amp;quot;Opções&amp;quot;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;add_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;admin_menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_admin_menus&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hoje vamos dedicar-nos, principalmente, à segunda função (&lt;code&gt;themeslug_options()&lt;/code&gt;) e à utilização de uma variável definida nas opções.&lt;/p&gt;

&lt;p&gt;Resumindo, hoje vamos fazer o seguinte:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Criar uma opção das definições para adicionar o &lt;em&gt;link&lt;/em&gt; do site para a sua página do Facebook.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Se o &lt;em&gt;link&lt;/em&gt; estiver definido, vai aparecer um ícone no tema para ir para a página, caso não esteja, o ícone não aparecerá.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pode parecer complicado, mas vai ver que é simples. Vamos começar por substituir o comentário que está dentro da função themeslug_options  pelo seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//...&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Este loop if verifica se o utilizador tem permissões suficientes&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * para aceder a esta página. Se não tiver, a função termina aqui&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * utilizando a função wp_die() e será apresentada a mensagem que está&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * dentro de parêntesis ao utilizador.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;current_user_can&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;manage_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;wp_die&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Não tem permissões suficientes para aceder a esta página!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;&amp;lt;!--  Aqui começa a nossa página, inserindo o título. --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;h2&amp;gt;Opções&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Ao voltarmos ao PHP, declaramos uma variável chamada Facebook que vai&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * conter a opção que irá ser definida.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Esta variável vai buscar a opção que está guardada. (Ver &amp;#39;if&amp;#39; seguinte)&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get_option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_facebook&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Neste loop if, verificamos se o formulário abaixo foi submetido. Isto é feito&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * verificando se um &amp;quot;input&amp;quot; abaixo foi definido. Este estará oculto de forma a&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * que não possa ser alterado.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Se estiver definida, a variável $facebook será &amp;quot;reescrita&amp;quot; colocando desta&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * vez o valor obtido através do método POST do formulário a seguir.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;update_settings&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;esc_attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;facebook&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * Aqui atualizamos a opção &amp;quot;themeslug_facebook&amp;quot; com o valor da variável&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * $facebook.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;update_option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_facebook&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//Apresentação de uma mensagem de sucesso&lt;/span&gt;
    &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt; &amp;lt;div id=&amp;quot;message&amp;quot; class=&amp;quot;updated below-h2&amp;quot;&amp;gt;&amp;lt;p&amp;gt;Definições guardadas&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/* Formulário que utilizaremos para submeter as definições.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Este formulário utiliza classes CSS próprias do WordPress,&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * como &amp;quot;top&amp;quot; e outras.  &lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;form method=&amp;quot;POST&amp;quot; action=&amp;quot;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;table class=&amp;quot;form-table&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;lt;tr valign=&amp;quot;top&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;th scope=&amp;quot;row&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &amp;lt;label for=&amp;quot;facebook&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    Facebook:&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;/th&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;td&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* Este input será onde colocaremos o link. O seu valor será igual à variável $facebook&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;                    anteriormente definida. Assim, caso essa opção não tenha sido definida, será apresentado&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;                    um campo vazio.&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;                    Caso já tenha sido definida, o campo irá conter o valor atual tornando-se mais fácil de editar. */&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;facebook&amp;quot; size=&amp;quot;100%&amp;quot; value=&amp;quot;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;/table&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* Criação de um input oculto para informar o PHP se estamos a submeter o formulário ou não. */&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;update_settings&amp;quot; value=&amp;quot;Y&amp;quot; /&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* Botão de submissão do formulário. */&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;submit&amp;quot; value=&amp;quot;Guardar alterações&amp;quot; class=&amp;quot;button button-primary&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;/form&amp;gt;    &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O código acima está integralmente comentado. Se lerem os comentários de cima para baixo, não conhecendo o resto do código, é normal que sintam alguma confusão.&lt;/p&gt;

&lt;p&gt;Porém, essa ordem é necessária de forma a que a variável &lt;code&gt;$facebook&lt;/code&gt; fique definida e apareça no input  do formulário. Por isso, se tiverem alguma dúvida, não hesitem em perguntar.&lt;/p&gt;

&lt;p&gt;Agora, quando acederem às definições do vosso tema (neste caso), irão ter uma página de opções.&lt;/p&gt;

&lt;p&gt;Podem agora definir o &lt;em&gt;link&lt;/em&gt; para a página do Facebook que desejam utilizar. Depois de guardarem as alterações ir-vos-à ser apresentada uma mensagem.&lt;/p&gt;

&lt;p&gt;Para aplicar a variável no tema é muito simples. Como viram acima, utilizámos a função get_option  para obter a opção que foi gravada e será assim que a iremos obter e utilizar no tema.&lt;/p&gt;

&lt;p&gt;O código acima verifica se a opção &lt;code&gt;themeslug_facebook&lt;/code&gt; foi definida e se sim, cria um link em HTML que direcionará para a página que foi definida nas opções do tema.&lt;/p&gt;

&lt;p&gt;É simples utilizar as opções nos temas do WordPress. Não se esqueçam, se não compreenderem qualquer coisa, podem sempre utilizar os comentários ou utilizar a &lt;a href=&#34;https://henriquedias.com/contact&#34;&gt;página de contacto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Espero que tenham gostado deste pequeno tutorial :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to create a Node.js command-line application</title>
      <link>https://henriquedias.com/tutorials/how-to-create-a-node-js-command-line-application</link>
      <pubDate>Tue, 31 Mar 2015 18:55:49 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/how-to-create-a-node-js-command-line-application</guid>
      <description>

&lt;p&gt;Nowadays, &lt;strong&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;node.js&lt;/a&gt;&lt;/strong&gt; is one of the technologies which is always talked about when the subject is related with real-time applications or even &lt;a href=&#34;http://en.wikipedia.org/wiki/Command-line_interface&#34;&gt;CLI &lt;/a&gt;(Command-line interface) apps.&lt;/p&gt;

&lt;p&gt;Node.js is a cross-platform platform (which is very redundant) built on Chrome&amp;rsquo;s JavaScript runtime. They say that with Node.js we can create network applications, but we can do a lot more.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://henriquedias.com/tutorials/como-utilizar-o-bower-um-gestor-de-pacotes-web/&#34;&gt;Bower&lt;/a&gt;, for example, is a very useful tool built in the top of node.js. We can take advantage of the fact of node.js be cross-platform to create CLI apps which can serve  everyone.&lt;/p&gt;

&lt;p&gt;CLI application can be very useful to task automation, to do repetitive tasks we do everyday, etc. Bower, that I&amp;rsquo;ve already mentioned, is useful because it installs and updates all of the front-end dependencies automatically.&lt;/p&gt;

&lt;p&gt;So, the purpose of this article is helping you creating a command-line interface application with node.js.&lt;/p&gt;

&lt;h2 id=&#34;is-everything-ok:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Is everything ok?&lt;/h2&gt;

&lt;p&gt;To begin, you should have both node.js and npm installed on your computer. The current versions of node.js already have npm build-in. Npm is the official node package manager.&lt;/p&gt;

&lt;p&gt;You can download node.js from this website. After installed, you should check if the node.js and npm are correctly installed on your computer. To do that, you can, for example, run the following commands to see the current installed version of each thing:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; node --version
&amp;gt; npm --version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If both commands return something like v0.12.0 and 2.5.1, everything is ready to be used.&lt;/p&gt;

&lt;h2 id=&#34;initialize-the-package:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Initialize the package&lt;/h2&gt;

&lt;p&gt;Now, let&amp;rsquo;s create our first node.js command-line application with node.js. First of all, go the directory where you want to save the code of the application. Run the following commands:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; mkdir mycliapp
&amp;gt; &lt;span class=&#34;nb&#34;&gt;cd &lt;/span&gt;mycliapp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course you can replace mycliapp  with whatever you want. Now, we have to create a &lt;code&gt;package.json&lt;/code&gt; file which contains the &lt;a href=&#34;http://en.wikipedia.org/wiki/Metadata&#34;&gt;meta information&lt;/a&gt; of the application. It can be done automatically:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; npm init
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After running the previous command, you should put the information you want for the package. If the information between parentheses is correct, you just have to press enter.&lt;/p&gt;

&lt;p&gt;Now, you should have something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;mycliapp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;This is my first cli application.&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Henrique Dias &amp;lt;hacdias@gmail.com&amp;gt; (http://henriquedias.com)&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think almost all of the content of that file is self-explanatory. If you have some doubt, search in &lt;a href=&#34;https://docs.npmjs.com/files/package.json&#34;&gt;this page&lt;/a&gt;. Right now, we are going to ignore the &lt;code&gt;index.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now, and because it is a command-line application, we should add two other informations to the &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;preferGlobal&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;bin&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;mycliapp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;./bin/mycliapp&amp;quot;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first one (preferGlobal ) that advises the user that this app should be installed globally, it means, available in the all system.&lt;/p&gt;

&lt;p&gt;The second one, bin , is used to tell the commands which will be available to use. In this example we have the command &lt;code&gt;mycliapp&lt;/code&gt; associated with the file located at &lt;code&gt;bin/mycliapp.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;output-some-data:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Output some data&lt;/h2&gt;

&lt;p&gt;Then we are going to create the &lt;code&gt;bin/mycliapp.js&lt;/code&gt; file which will have all of the application logic (in this case, it can be divided into various files). Create it, and simply add the following line of code to print an Hello World:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello, World!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, link your app with npm to run it locally. Do it using this command:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; npm link
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that, you should be able to run the command &lt;code&gt;mycliapp&lt;/code&gt; in the console. Run it and you should receive the message &amp;ldquo;Hello, world!&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;get-data-from-user:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Get data from user&lt;/h2&gt;

&lt;p&gt;Now we already know how to output some information (simply using &lt;code&gt;console.log()&lt;/code&gt;). So now we are going to learn how to get data from the user.&lt;/p&gt;

&lt;p&gt;There are some packages which help us to make question to the user, but we will use the built-in module readline which is very simple to use.&lt;/p&gt;

&lt;p&gt;Firstly, we need to include that module. To do that, we may do something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;readline&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we have to create the interface to make the question, it means that we are going to set the input and output of data.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createInterface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stdout&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;process&lt;/code&gt; (read more &lt;a href=&#34;https://nodejs.org/api/process.html#process_process&#34;&gt;here&lt;/a&gt;) is a global object variable which is an instance of &lt;a href=&#34;https://nodejs.org/api/process.html#process_process&#34;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So now that we already have the input and output setted up, we can make a question to the user and then receive the answer. We should use this syntax:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To ask the user his name and then print it, you may do something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;What is your name? &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// close the instance of reading interface&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is very simples as you can see. Never forget to close the instance of the reading interface. After that you can do whatever you want with the answer of the user.&lt;/p&gt;

&lt;p&gt;You can get more information about this module &lt;a href=&#34;https://nodejs.org/api/readline.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;how-to-read-arguments:2cf2d4fc691211667baf098cd3988ead&#34;&gt;How to read arguments&lt;/h2&gt;

&lt;p&gt;There are a lot of ways to read arguments. There&amp;rsquo;s some third-party packages which helps the user doing it, like &lt;a href=&#34;https://www.npmjs.com/package/commander&#34;&gt;&lt;code&gt;commander&lt;/code&gt;&lt;/a&gt;, but we are going to do it manually to see how does it work.&lt;/p&gt;

&lt;p&gt;Remember the process  object? It also contains the arguments. Let&amp;rsquo;s experiment. Write the following code of line in bin/mycliapp. You might remove all of the previous code or comment it.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, run the application, putting some arguments, options, commands after the app name.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; mycliapp option1 henrique
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;,
 &lt;span class=&#34;s1&#34;&gt;&amp;#39;C:\\Users\\Henrique\\AppData\\Roaming\\npm\\node_modules\\mycliapp\\bin\\mycliapp&amp;#39;&lt;/span&gt;,
  &lt;span class=&#34;s1&#34;&gt;&amp;#39;option1&amp;#39;&lt;/span&gt;,
  &lt;span class=&#34;s1&#34;&gt;&amp;#39;henrique&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, the first element of our arguments array is the environment, in this case, node. The second one is the path of the file which is running. The following elements are the other arguments.&lt;/p&gt;

&lt;p&gt;If you just want the arguments put by the user you may do something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// remove 2 elements after the position 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you print the content of args  variable you will see that it only contains the arguments that the user wrote.&lt;/p&gt;

&lt;p&gt;Now, if you want, for example, to print &amp;ldquo;Hello&amp;rdquo; when the user uses the argument &lt;code&gt;sayhello&lt;/code&gt; , you can do this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sayhello&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Simple, but effective.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now, go on and create your CLI application with Node.js :)&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this tutorial of how to create node.js command-line applications. If you have some doubts, you may use the comments or the &lt;a href=&#34;https://henriquedias.com/contact/&#34;&gt;contact page&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MVC na linguagem PHP - IV</title>
      <link>https://henriquedias.com/tutorials/mvc-linguagem-php-iv</link>
      <pubDate>Sun, 21 Dec 2014 10:00:04 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/mvc-linguagem-php-iv</guid>
      <description>

&lt;p&gt;A pedido de um leitor, decidimos escrever um artigo em que exemplificamos este maravilhoso (ou não) modelo MVC utilizando a linguagem de programação PHP.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php/&#34;&gt;primeira&lt;/a&gt;, &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php-ii/&#34;&gt;segunda&lt;/a&gt; e &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php-iv/&#34;&gt;terceiras&lt;/a&gt; partes já foram publicadas. Hoje, trago a quarta e última parte desta mini-série de artigos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/mvcp4.jpg&#34; alt=&#34;Modelo MVC – Uma exemplificação com PHP #4&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O que vamos fazer hoje é, simplesmente, criar uma página dinâmica que liste diversos &lt;em&gt;posts&lt;/em&gt; que estão na base de dados da aplicação.&lt;/p&gt;

&lt;p&gt;Se bem se lembra, a ligação à base de dados é configurada no ficheiro &lt;code&gt;config.php&lt;/code&gt;, por isso assegure-se que a sua conexão está bem configurada.&lt;/p&gt;

&lt;p&gt;Aqui, tenho uma base de dados chamada &lt;em&gt;mvc&lt;/em&gt; com uma tabela chamada &lt;em&gt;posts&lt;/em&gt;, e esta tabela tem três colunas: a &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; e &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;De momento tenho duas linhas inseridas nessa mesma tabela, ou seja, de momento tenho exatamente o seguinte:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;title&lt;/th&gt;
&lt;th&gt;content&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Lorem Ipsum&lt;/td&gt;
&lt;td&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus id velit non tellus feugiat feugiat vitae quis nibh. Pellentesque maximus lectus ut enim tincidunt, a rutrum dui elementum. Vestibulum elit sapien, malesuada sit amet est lacinia, aliquet laoreet arcu. Duis quis velit hendrerit, pretium nibh ut, faucibus odio. Fusce hendrerit nunc urna, vitae varius augue fringilla in. Nunc a ex eget lectus dictum mollis. Proin quis nisl consectetur metus bibendum ultricies eu non orci. Quisque nec efficitur quam. Suspendisse lorem nulla, sollicitudin ac sagittis id, eleifend eget eros. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras neque leo, consectetur nec sem quis, imperdiet viverra quam. Pellentesque ultricies felis a molestie egestas. Aliquam malesuada eget justo condimentum venenatis. Duis mattis ut nisi in suscipit. Phasellus scelerisque, arcu ut sollicitudin sagittis, ex ante posuere neque, et dapibus ex lectus quis libero.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Usto Risus&lt;/td&gt;
&lt;td&gt;Usto risus, cursus non iaculis a, semper vitae dolor. Nunc pellentesque tempor pretium. Sed sem risus, accumsan ut urna in, sollicitudin sagittis nisi. Integer ullamcorper orci id nisl iaculis, ac congue purus posuere. Vivamus pharetra nibh in arcu vulputate, in feugiat dolor feugiat. Aliquam erat volutpat. Maecenas sodales magna urna, quis faucibus arcu mattis sit amet. Ali. Fusce hendrerit nunc urna, vitae varius augue fringilla in. Nunc a ex eget lectus dictum mollis. Proin quis nisl consectetur metus bibendum ultricies eu non orci. Quisque nec efficitur quam. Suspendisse lorem nulla, sollicitudin ac sagittis id, eleifend eget eros. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras neque leo, consectetur nec sem quis, imperdiet viverra quam. Pellentesque ultricies felis a molestie egestas. Aliquam malesuada eget justo condimentum venenatis. Duis mattis ut nisi in suscipit. Phasellus scelerisque, arcu ut sollicitudin sagittis, ex ante posuere neque, et dapibus ex lectus quis libero.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;controlador:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Controlador&lt;/h2&gt;

&lt;p&gt;Como sempre, iremos começar com um simples controlador. De momento, o controlador deverá ser simples e ter apenas o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Posts&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/* REQUERER POSTS */&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Posts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;posts/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;De momento, apenas declaramos o construtor e também a função index  que será aquela que vai  ser acedida ao acedermos a &lt;code&gt;URL/posts&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;modelo:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Modelo&lt;/h2&gt;

&lt;p&gt;Vamos então virar a nossa cara para os modelos. O modelo correspondente a este controlador deverá estar localizado em &lt;code&gt;app_core/models/posts.php&lt;/code&gt; e deverá conter um código semelhante ao seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Posts&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Model&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getPosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;SELECT * FROM posts&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Onde utilizamos o construtor para criar uma ligação à base de dados e criamos a função &lt;code&gt;getPosts&lt;/code&gt; que irá buscar todos as as colunas da tabela &lt;em&gt;posts&lt;/em&gt; da base de dados a que está ligada a nossa aplicação.&lt;/p&gt;

&lt;p&gt;Como pode ver, este é um modelo bastante simples cuja única função é buscar os ficheiros à base de dados. De momento não há mais nenhuma alteração.&lt;/p&gt;

&lt;h2 id=&#34;voltando-ao-controlador:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Voltando ao controlador&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Agora devemos voltar ao controlador e substituir o comentário que lá deixámos pelas seguintes duas linhas:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;$data = $this-&amp;gt;model-&amp;gt;getPosts();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$this-&amp;gt;view-&amp;gt;setData($data);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A função destas duas linhas é bastante simples: primeiro, declaramos uma variável que será igual ao retorno da função que criámos anteriormente para selecionar os artigos.&lt;/p&gt;

&lt;p&gt;De seguida, &amp;ldquo;injetamos&amp;rdquo; o conteúdo desta variável na &lt;em&gt;view&lt;/em&gt; deste controlador utilizando a função &lt;code&gt;setData&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;que-bela-vista:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Que bela vista!&lt;/h2&gt;

&lt;p&gt;Agora só falta a parte que irá mostrar os itens na página: a &lt;em&gt;view&lt;/em&gt;. Esta &lt;em&gt;view&lt;/em&gt; deverá ser declarada no diretório &lt;code&gt;app_core/views/posts/index.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Relembro que a localização do ficheiro é definida quando utilizamos a função render . Então, o conteúdo que coloquei nesta página é o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;h1&amp;gt;Posts&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_data&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;h2&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;endforeach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode ver, aqui percorremos todos os itens do array &lt;code&gt;$_data&lt;/code&gt; que faz parte da vista e, de seguida, imprimimos o título e o conteúdo de cada &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;ou-seja:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Ou seja,&lt;/h2&gt;

&lt;p&gt;Ou seja, é muito simples. Muitas coisas podem ser agora feitas neste modelo, pois a parte mais difícil já foi feita: o &lt;em&gt;core&lt;/em&gt;, o &lt;em&gt;kernel&lt;/em&gt;, o núcleo da aplicação.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tem alguma sugestão, ideia ou modificação? Sinta-se livre para contribuir para esta simples, pequena e &lt;em&gt;homemade framework&lt;/em&gt; no &lt;a href=&#34;https://github.com/hacdias/InMVC&#34;&gt;GitHub&lt;/a&gt; :)&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MVC na linguagem PHP - III</title>
      <link>https://henriquedias.com/tutorials/mvc-linguagem-php-iii</link>
      <pubDate>Sat, 20 Dec 2014 09:00:23 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/mvc-linguagem-php-iii</guid>
      <description>

&lt;p&gt;A pedido de um leitor, decidimos escrever um artigo em que exemplificamos este maravilhoso (ou não) modelo MVC utilizando a linguagem de programação PHP.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php/&#34;&gt;primeira&lt;/a&gt; e &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php-ii/&#34;&gt;segunda&lt;/a&gt; partes já foram publicadas e hoje é a vez da terceira onde tudo começa a tornar-se mais facilmente compreendido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/mvcphp.jpg&#34; alt=&#34;Modelo MVC – Uma exemplificação com PHP #3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Em primeiro lugar, quero referir algumas modificações que efetuei em alguns dos ficheiros que já trabalhámos.&lt;/p&gt;

&lt;p&gt;Adicionei a constante &lt;code&gt;SITE_TITLE&lt;/code&gt; ao ficheiro &lt;code&gt;config.php&lt;/code&gt;, ficando a primeira secção deste ficheiro da seguinte forma:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//...&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//1. Base Constants&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ROOT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;URL&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://localhost/mvc/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SITE_TITLE&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Simple MVC Structure Model&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Na classe &lt;code&gt;View&lt;/code&gt; foi adicionada uma função que permitirá ao utilizador definir o título (aquele que aparece na parte superior do &lt;em&gt;browser&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;public function setTitle($title)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $this-&amp;gt;_pageInfo[&amp;#39;title&amp;#39;] = $title . &amp;#39; | &amp;#39; . SITE_TITLE;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;public-html:ae98e7c4c7a05fc53108b63636849ebe&#34;&gt;&lt;code&gt;public_html&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Hoje vamos continuar a nossa jornada começando na pasta pública, ou seja, na pasta &lt;code&gt;public_html&lt;/code&gt;. Vamos começar com o nosso maravilhoso &lt;code&gt;.htaccess&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nb&#34;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;404&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/404&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/500&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;mod_rewrite.c&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nb&#34;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;On&lt;/span&gt;

    &lt;span class=&#34;nb&#34;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-d
    &lt;span class=&#34;nb&#34;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-f
    &lt;span class=&#34;nb&#34;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-l

    &lt;span class=&#34;nb&#34;&gt;RewriteRule&lt;/span&gt; ^(.+)$ index.php?url=$1 [QSA,L]

&lt;span class=&#34;nt&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode ver, todos os pedidos serão direcionados para o ficheiro &lt;code&gt;index.php&lt;/code&gt; com o URL completo na forma de parâmetro GET.&lt;/p&gt;

&lt;p&gt;Falando em &lt;code&gt;index.php&lt;/code&gt;, e que tal lhe darmos uma espreitadela? Este vai ser o ficheiro que vai iniciar toda a sequência de acontecimentos. Ora veja:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * Main file.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * @package MVC PHP Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../app_core/config.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;autoLoad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$className&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DIR_LIBS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$className&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;spl_autoload_register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;autoLoad&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$bootstrap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Bootstrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$bootstrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste ficheiro, como pode ver, o ficheiro das configurações é chamado e, de seguida, é criado uma função de auto carregamento.&lt;/p&gt;

&lt;p&gt;O que faz esta função? Simplesmente tenta carregar uma classe indefinida. Como pode ver, eu não importo a classe &lt;code&gt;Bootstrap&lt;/code&gt;, mas logo de seguida uso-a.&lt;/p&gt;

&lt;p&gt;Consigo utilizá-la porque a a função de &lt;em&gt;auto load&lt;/em&gt; chama esta classe automaticamente. Mas atenção! Este código apenas nos permite carregar automaticamente classes contidas na pasta &lt;code&gt;libs&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se neste momento experimentar correr o código nesta pasta irá receber diversos erros porque ainda não foram criados nenhuns controladores. Nem mesmo o dos erros!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;header-and-footer:ae98e7c4c7a05fc53108b63636849ebe&#34;&gt;&lt;em&gt;Header and Footer&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Antes de continuarmos para a criação dos controladores, devemos criar os ficheiros do cabeçalho e do rodapé que são chamados quando executamos a função &lt;em&gt;render&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Estes dois ficheiros deverão estar localizados na diretoria &lt;code&gt;app_core/views/*.php&lt;/code&gt;, onde &lt;code&gt;*&lt;/code&gt; corresponde a &lt;em&gt;header&lt;/em&gt; e a &lt;em&gt;footer&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A minha proposta para o ficheiro do cabeçalho é a seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;en-EN&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php echo (isset($this-&amp;gt;_pageInfo[&amp;#39;title&amp;#39;])) ? $this-&amp;gt;_pageInfo[&amp;#39;title&amp;#39;] : SITE_TITLE; ?&amp;gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;viewport&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;width=device-width, initial-scale=1&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;stylesheet&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;lt;?php echo URL; ?&amp;gt;css/template.css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;text/css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;media=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;stylesheet&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;lt;?php echo URL; ?&amp;gt;css/normalize.css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;text/css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;media=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;header&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;MVCPHPB&lt;span class=&#34;nt&#34;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
    | &lt;span class=&#34;nt&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;lt;?php echo URL; ?&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Home&lt;span class=&#34;nt&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    | &lt;span class=&#34;nt&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;lt;?php echo URL; ?&amp;gt;page&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Page&lt;span class=&#34;nt&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    | &lt;span class=&#34;nt&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;lt;?php echo URL; ?&amp;gt;posts&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Posts&lt;span class=&#34;nt&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Onde já temos o título da página que será igual ao título que é definido utilizando a função que referi no início do artigo, ou apenas o nome do site.&lt;/p&gt;

&lt;p&gt;Deixei também uma pequena introdução à estrutura HTML do site e uma pista àquilo que iremos criar: iremos criar uma página estática (&lt;em&gt;Page&lt;/em&gt;) e uma página dinâmica com alguns itens de uma base de dados (&lt;em&gt;Posts&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Estou também a utilizar o &lt;code&gt;normalize.css&lt;/code&gt; e uma folha de estilos própria com alguns ajustes de forma a distinguir melhor cada uma das partes do site. Aqui está o &lt;code&gt;template.css&lt;/code&gt; (deve ser colocado na pasta &lt;code&gt;css&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nf&#34;&gt;#header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;#wrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;#footer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;#header&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;#footer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;#fff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos agora ver o rodapé. O rodapé está localizado no ficheiro &lt;code&gt;app_core/views/footer.php&lt;/code&gt; e o conteúdo deve ser algo semelhante ao seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;footer&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;strong&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;MVCPHPB&lt;span class=&#34;nt&#34;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; Footer
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;controladores:ae98e7c4c7a05fc53108b63636849ebe&#34;&gt;Controladores&lt;/h2&gt;

&lt;p&gt;Depois de termos &amp;ldquo;montado&amp;rdquo; a estrutura, devemos passar à criação das páginas. Em primeiro lugar, vamos criar o controlador do erro.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;404&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;404&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Error 404&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Not found. There is nothing here.&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Error 500&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Internal Server Error. Probably we did something wrong.&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Os controladores devem pertencer à &lt;em&gt;namespace&lt;/em&gt; Controller e devem ter, obrigatoriamente, o seu construtor presente no formato mostrado acima.&lt;/p&gt;

&lt;p&gt;Este é um controlador que só terá o método _index _relacionado com as páginas pois não irá ser utilizado mais nenhum. Acima pode visualizar que este método irá receber um argumento que, por padrão, é &amp;lsquo;404&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;De seguida, algumas informações são atribuídas dependendo do erro em questão. Depois o título da página é definido e, mais tarde, os dados são enviados para a &lt;em&gt;view&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Falando em &lt;em&gt;view&lt;/em&gt;, esta é renderizada logo de seguida. A _view _que colocámos é &lt;code&gt;error/index&lt;/code&gt;, então o ficheiro PHP deverá encontrar-se em &lt;code&gt;app_core/views/error/index.php&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se experimentar correr o código neste momento, deverá receber um erro por não encontrar a _View _da página de erro.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos então visualizar a &lt;em&gt;view&lt;/em&gt; que corresponde à página de erro:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;    &amp;lt;h1&amp;gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    &amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É simples. Serve apenas para mostrar que ocorreu um erro. Mas não podemos continuar assim pois ao abrirmos a página inicial estamos apenas a ver um erro.&lt;/p&gt;

&lt;p&gt;Vamos então criar o controlador da página inicial, que deve conter o seguinte código:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Index&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Home&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;index/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E o ficheiro da sua _view _deverá ter qualquer coisa que deseje. Eu, por exemplo, coloquei:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;MVC PHP Bootstrap (MVCPHPB)&lt;span class=&#34;nt&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is the main page of this website that is a simple mvc structure model example.&lt;span class=&#34;nt&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Esta é a página principal deste site que é um exemplo de modelo de estrutura MVC simples.&lt;span class=&#34;nt&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Coloque o que queira. De momento, se aceder à página inicial deverá visualizar a página inicial propriamente dita e se tentar, eventualmente, abrir qualquer outra possível página, irá ver a página de erro 404.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No próximo tutorial iremos ver a criação de uma página dinâmica com um modelo&lt;/strong&gt;. Pode, entretanto, experimentar criar mais páginas ou até mesmo criar mais métodos para sub-páginas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MVC na linguagem PHP - II</title>
      <link>https://henriquedias.com/tutorials/mvc-linguagem-php-ii</link>
      <pubDate>Fri, 19 Dec 2014 12:26:59 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/mvc-linguagem-php-ii</guid>
      <description>

&lt;p&gt;A pedido de um leitor, decidimos escrever um artigo em que exemplificamos este maravilhoso (ou não) modelo MVC utilizando a linguagem de programação PHP.&lt;/p&gt;

&lt;p&gt;Depois de publicarmos a &lt;a href=&#34;https://henriquedias.com/mvc-linguagem-php/&#34;&gt;primeira parte&lt;/a&gt;, onde explicámos a estrutura da pequena &lt;em&gt;framework&lt;/em&gt; que iremos criar, aqui está a segunda parte.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/mvc02.jpg&#34; alt=&#34;Modelo MVC - Uma exemplificação com PHP #2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hoje iremos trabalhar no coração da aplicação, ou seja, na diretoria &lt;code&gt;app_core/libs&lt;/code&gt;. Nesta pasta mãe, irão ser colocados todos os ficheiros PHP que serão as classes mãe de todos os outros ficheiros.&lt;/p&gt;

&lt;h2 id=&#34;bootstrap-php:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;strong&gt;Bootstrap.php&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Vamos começar por criar um ficheiro denominado Bootstrap.php onde iremos colocar todo o seguinte código:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * Class Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * @package MVC PHP Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Bootstrap&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_controller&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_errorFile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;error.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * Starts the Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @return boolean&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_getUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_method&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * This function get the content of &amp;#39;url&amp;#39; variable&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * of HTTP GET method. See the .htaccess for more&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * information.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_getUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rtrim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;filter_var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FILTER_SANITIZE_URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;explode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * This function initializes the controller that&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * matches with the current url.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @return bool&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DIR_CONTROLLERS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;file_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

            &lt;span class=&#34;nv&#34;&gt;$controller&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Controller&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

            &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;

            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * This function calls the method depending on the&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * url fetched above.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_method&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;method_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;//Controller-&amp;gt;Method(Param1, Param2, Param3)&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]}(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;//Controller-&amp;gt;Method(Param1, Param2)&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]}(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;//Controller-&amp;gt;Method(Param1, Param2)&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]}(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;//Controller-&amp;gt;Method(Param1, Param2)&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]}();&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

            &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * Display an error page if there&amp;#39;s no controller&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * that corresponds with the current url.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DIR_CONTROLLERS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_errorFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ControllerError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O código acima é aquele que irá inicializar todo a aplicação. Em primeiro lugar, gostava de dizer que a estrutura do URL da aplicação será a seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;    http://site/controlador/método/arg1/arg2/&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;arg...&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos então ver, por partes, o que faz cada uma das funções declaradas acima.&lt;/p&gt;

&lt;h3 id=&#34;init:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;A função &lt;code&gt;init&lt;/code&gt; é a função onde tudo começa. Em primeiro lugar, esta função chama a função &lt;code&gt;_getUrl&lt;/code&gt; que recebe o URL atual (será analisada mais à frente).&lt;/p&gt;

&lt;p&gt;De seguida, esta função define a página como index caso nenhuma página esteja definida no URL. Então a função chama duas outras que iremos ver de seguida.&lt;/p&gt;

&lt;h3 id=&#34;geturl:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;_getUrl&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Esta função recebe a variável url que foi passada através do método GET (em breve veremos as modificações que têm que ser efetuadas no &lt;code&gt;.htaccess&lt;/code&gt; para que seja passada esta variável).&lt;/p&gt;

&lt;p&gt;Aqui é utilizado o &lt;a href=&#34;https://henriquedias.com/explanations/operador-ternario/&#34;&gt;operador ternário&lt;/a&gt; de forma a que a variável&lt;code&gt;$url&lt;/code&gt; seja igual a null  caso não haja nenhum conteúdo na variável url que foi passada através do método GET.&lt;/p&gt;

&lt;p&gt;Depois é removida a última barra (/) da variável com a função &lt;code&gt;rtrim&lt;/code&gt;. De seguida é aplicado um filtro à array  de forma a remover todos os caracteres não permitidos aqui.&lt;/p&gt;

&lt;p&gt;Finalmente, a variável do url da classe (&lt;code&gt;$_url&lt;/code&gt;) é igualada à &amp;ldquo;explosão&amp;rdquo; da variável &lt;code&gt;$url&lt;/code&gt; que se irá tornar num array .&lt;/p&gt;

&lt;h3 id=&#34;controller:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;_controller&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Esta função, em primeiro lugar, define o caminho do ficheiro do controlador correspondente ao URL atual. O caminho será igual à constante &lt;code&gt;DIR_CONTROLLERS&lt;/code&gt; + a primeira parte do url + a extensão do ficheiro que é &lt;code&gt;.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;De seguida, é feita a verificação se o controlador em questão existe. Se existir, o controlador é inicializado, caso contrário, o fluxo da aplicação é direcionado para a função de erro (&lt;code&gt;_error&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&#34;method:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;_method&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Esta função é como um GPS: ela é que envia o fluxo para o sítio correto. Isto vai ser feito dependendo do que foi enviado no URL.&lt;/p&gt;

&lt;p&gt;Esta função irá executar o método em questão que, caso não seja especificado nenhum, é o método index do controlador em questão.&lt;/p&gt;

&lt;h3 id=&#34;error:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;_error&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Finalmente, temos a função de erro que irá inicializar o controlador dos erros. O ficheiro que corresponde a este controlador é definido na variável &lt;code&gt;$_errorFile&lt;/code&gt;, que eu coloquei &lt;code&gt;error.php&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;controller-php:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;Controller.php&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;De momento, o que foi feito até agora pode aparentar não ter muito sentido, mas com o encaixar das peças tudo irá ser mais claro. Vejamos agora a classe mãe dos Controladores.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * Class Controller&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * @package MVC PHP Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Controller&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * The constructor of this class automatically initializes&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * the View and sets the corresponding model path. If the&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * model file exists, it calls it.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param $name&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ROOT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;models/&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;file_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

            &lt;span class=&#34;nv&#34;&gt;$modelName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Model&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$modelName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esta classe é claramente menos complexa que a anterior e conta apenas com o seu construtor que recebe o nome do controlador e inicializa, automaticamente, a &lt;em&gt;View&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;De seguida, o construtor constrói o caminho até ao modelo do controlador em questão, que caso o controlador se chame &amp;ldquo;about&amp;rdquo; , o caminho para o modelo seria &lt;code&gt;ROOT . &#39;models/about.php&#39;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Depois é feita a verificação se existe o ficheiro do modelo e, caso este exista, é inicializado o modelo do controlador.&lt;/p&gt;

&lt;p&gt;Mas, porque é que esta verificação é feita? Porque nem todas as páginas utilizarão a base de dados. Páginas estáticas como, por exemplo, a página sobre, não necessitam, geralmente, de manipulação de dados.&lt;/p&gt;

&lt;h2 id=&#34;database-php:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;Database.php&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;A classe Database vai estar intimamente ligada com a classe PDO e será com ela que inicializaremos a ligação à base de dados e não com a PDO, pois a Database  é baseada na PDO. Ora veja:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * Class Database&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * @package MVC PHP Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Database&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;PDO&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DB_TYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_USER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_PASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DB_TYPE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;:host=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;;dbname=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_USER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DB_PASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;SET NAMES &amp;#39;utf8&amp;#39;;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * Function used to select something of the database.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $sql An SQL string&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param array $array Parameters to bind&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param const|int $fetchMode A PDO Fetch mode&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @return mixed&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$array&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$fetchMode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;PDO&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;FETCH_ASSOC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;prepare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$array&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bindValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;fetchAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fetchMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * Function used to insert things in the database.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $table A name of table to insert into&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $data An associative array&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;ksort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$fieldNames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;implode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;`, `&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;array_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$fieldValues&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;implode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;, :&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;array_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;prepare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;INSERT INTO &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; (`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$fieldNames&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;`) VALUES (&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$fieldValues&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bindValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * Function used to update things on the database.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $table A name of table to insert into&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $data An associative array&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $where the WHERE query part&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;ksort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$fieldDetails&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$fieldDetails&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;`=:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;,&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$fieldDetails&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rtrim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fieldDetails&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;prepare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;UPDATE &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; SET &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$fieldDetails&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; WHERE &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$where&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bindValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$sth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * Function used to delete things from the database.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $table&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param string $where&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @param integer $limit&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @return integer Affected Rows&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$limit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;DELETE FROM &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; WHERE &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$where&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; LIMIT &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$limit&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Não há muito a falar sobre esta classe visto que ela contém apenas algumas funções para agilizar diversas operações como inserções na base de dados, seleções, atualizações e eliminações.&lt;/p&gt;

&lt;p&gt;Acrescento que o construtor deve receber todos aqueles itens que escrevemos nas constantes da configuração: todos os dados relativos à conexão à Base de Dados.&lt;/p&gt;

&lt;h2 id=&#34;model-php:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;Model.php&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Vejamos então a classe superior de todos os modelos que irão constituir a nossa aplicação:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * Class Model&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * @package MVC PHP Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Model&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * The constructor of this class automatically initializes&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * the Database.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Database&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB_TYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_USER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_PASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode ver, a classe é pequena e o seu construtor apenas inicializa uma instância da conexão à Base de Dados que será utilizada em todos os modelos.&lt;/p&gt;

&lt;h2 id=&#34;view-php:8c5520c3a68364cd39d5b7074fc8e9f3&#34;&gt;&lt;code&gt;View.php&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;O modelo da &lt;em&gt;View&lt;/em&gt; que já foi muito falado acima também é muito pequeno.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * Class View&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * @package MVC PHP Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;View&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;//Views Contruct&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DIR_VIEWS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;header.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DIR_VIEWS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DIR_VIEWS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;footer.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste é inicializada uma variável chamada &lt;code&gt;$_data &lt;/code&gt; que irá conter todo o conteúdo que deverá ser enviado para o HTML de forma a ser imprimido.&lt;/p&gt;

&lt;p&gt;Temos também a função render  que é aquela que vai incluir (ou requerer) todos os ficheiros para serem apresentados. Dividi os ficheiros em três partes: o cabeçalho (&lt;em&gt;header&lt;/em&gt;), o principal e o rodapé (&lt;em&gt;footer&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Temos, por fim, a função setData que será utilizada para definir a variável da vista. Utilizei uma função para não haver manipulação direta das variáveis da classe.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Provavelmente reparou que coloquei vários comentário em Inglês. No final desta saga de artigos vou colocar esta &lt;em&gt;framework&lt;/em&gt; simples no GitHub de forma a que todos os que queiram possam contribuir ou até mesmo utilizar. :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Até ao próximo artigo. O principal já está feito. Faltam os dois ficheiros que iniciarão tudo (e mais algumas coisinhas).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MVC na linguagem PHP</title>
      <link>https://henriquedias.com/tutorials/mvc-linguagem-php</link>
      <pubDate>Thu, 18 Dec 2014 22:55:34 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/mvc-linguagem-php</guid>
      <description>

&lt;p&gt;No último artigo publicado, foi falado acerca do &lt;a href=&#34;https://henriquedias.com/explanations/mvc-uma-breve-explicacao/&#34;&gt;&lt;strong&gt;Modelo MVC&lt;/strong&gt;&lt;/a&gt; e sobre aquilo em que este consiste. O Modelo &lt;em&gt;Model-View-Controller&lt;/em&gt; é amplamente utilizado nos dias de hoje.&lt;/p&gt;

&lt;p&gt;A pedido de um leitor, decidimos escrever um artigo em que exemplificamos este maravilhoso (ou não) modelo MVC utilizando a linguagem de programação PHP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/mvcuecphppI.jpg&#34; alt=&#34;Modelo MVC - Uma exemplificação com PHP #1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Gostaria de dizer que esta exemplificação terá como base uma &amp;ldquo;framework base&amp;rdquo; MVC construída por mim através de vários tutoriais e ideias que encontrei &lt;em&gt;online&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Para a aplicação começar a ser construída, é necessário efetuar a estruturação da mesma. Esta estruturação passa pela disposição dos ficheiros pelas pastas. Irá ser utilizada a seguinte estrutura:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; app_core &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Application Core&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; controllers
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; libs
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; models
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; views
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; config.php

&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; public_html &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Public HTML&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; css
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; imgs
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; js
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; .htaccess
     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; index.php
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Visualizando a estruturação anterior, é possível verificar que existem duas pastas principais: a pasta &lt;code&gt;app_core&lt;/code&gt; e a pasta &lt;code&gt;public_html&lt;/code&gt;. Cada uma das duas pastas tem a sua função específica. Vejamos então qual a finalidade de cada uma das pastas.&lt;/p&gt;

&lt;h2 id=&#34;application-core:2145cfb95ae0f5633dadec63c3e54ade&#34;&gt;&lt;em&gt;Application Core&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;O núcleo (ou motor) da aplicação está contido na pasta &lt;code&gt;app_core&lt;/code&gt; estando no mesmo nível que a pasta que irá estar pública através do &lt;em&gt;browser&lt;/em&gt;, logo os visitantes não terão acesso a nenhum conteúdo desta pasta. Dentro desta pasta podemos verificar a existência de quatro outras e também de um ficheiro.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;controllers&lt;/code&gt; → pasta para colocar os controladores da aplicação que são, de forma generalizada, aqueles ficheiros que comandam a aplicação: o seu cérebro;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;libs&lt;/code&gt; → nesta pasta estão contidas as classes base para todos os outros ficheiros da aplicação como os modelos, controladores, vistas, base de dados, etc.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;models&lt;/code&gt; → aqui são colocados os modelos da aplicação, ou seja, aqueles ficheiros que estão encarregados da manipulação de dados;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;views&lt;/code&gt; → esta pasta irá conter todos os ficheiros que têm como base HTML. Mais nenhuma pasta da aplicação deverá conter ficheiros com HTML;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;config.php&lt;/code&gt; → o ficheiro de configuração principal. Aqui são definidas as diversas constantes que irão ser necessárias na execução da aplicação.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;public-html:2145cfb95ae0f5633dadec63c3e54ade&#34;&gt;&lt;em&gt;Public HTML&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;A pasta &lt;code&gt;public_html&lt;/code&gt; será aquela que para a qual o servidor web, como por exemplo o apache, estará a apontar. Esta irá conter todos os ficheiros que estarão disponíveis ao utilizador.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;css&lt;/code&gt; → todos os ficheiros de estilo serão incluídos nesta pasta;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;imgs&lt;/code&gt; → qualquer imagem que seja utilizada na aplicação poderá ser colocada aqui;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js&lt;/code&gt; → todos os scripts escritos na linguagem &lt;em&gt;javascript&lt;/em&gt; deverão aqui ser colocados;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.htacces&lt;/code&gt;s → o ficheiro que dispensa apresentações;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index.php&lt;/code&gt; → o ficheiro onde tudo começa.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-php:2145cfb95ae0f5633dadec63c3e54ade&#34;&gt;config.php&lt;/h2&gt;

&lt;p&gt;Iremos começar pelo ficheiro mais simples: o ficheiro &lt;code&gt;config.php&lt;/code&gt; que está contido base do núcleo da aplicação (&lt;code&gt;app_core/config.php&lt;/code&gt;). Este ficheiro, como já referido, irá conter as constantes principais. Ora veja:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;* Ficheiro de Configuração&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;* Este ficheiro contém a configuração base deste website/aplicação:&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*  1. Constantes Base&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*  2. Constantes de Diretórios&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*  3. Configuração da Base de Dados&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*  4. Definições de erros&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;* Coloque sempre uma barra (/) depois de todos os caminhos.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//1. Constantes Base&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ROOT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;URL&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://localhost/mvc/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//2. Constantes de Diretórios&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DIR_LIBS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ROOT&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;libs/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DIR_MODELS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ROOT&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;models/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DIR_VIEWS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ROOT&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;views/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DIR_CONTROLLERS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ROOT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;controllers/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DIR_PUBLIC&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../public_html/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//3. Configuração da Base de Dados&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_TYPE&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;mysql&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_HOST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_NAME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dbname&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_USER&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dbuser&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_PASS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dbpass&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;* 4. Definições de Erros&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;* Defina error_reporting:&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*  para -1 de forma a mostrar todos os erros que ocorrem;&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*  para  0 de forma a ocultar todos os erros gerados.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;error_reporting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;ini_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;display_errors&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crie um ficheiro com o código acima e guarde-o na pasta mencionada. Não se esqueça de alterar a constante URL, de forma a corresponder com o URL que vai utilizar para criar esta pequena aplicação. Altere também os dados da Configuração da Base de Dados.&lt;/p&gt;

&lt;h3 id=&#34;dica:2145cfb95ae0f5633dadec63c3e54ade&#34;&gt;Dica:&lt;/h3&gt;

&lt;p&gt;Como pode ter reparado acima, eu estou a utilizar o link &lt;code&gt;localhost/mvc&lt;/code&gt;  que redirecionará para a pasta pública da aplicação, sendo que a base dos documentos do meu servidor é &lt;code&gt;C:\Web\Server\Apache24\htdocs&lt;/code&gt;  e a aplicação está localizada em &lt;code&gt;D:\Development\mvc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como fiz isto? Criei um &lt;a href=&#34;http://en.wikipedia.org/wiki/Symbolic_link&#34;&gt;&lt;em&gt;link simbólico&lt;/em&gt;&lt;/a&gt; de forma a que C:WebServerApache24htdocsmvc  corresponda a D:Developmentmvcpublic_html . Para criar um link simbólico no Windows basta correr o seguinte comando na linha de comandos em modo de administrador:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;MKLINK /D &amp;lt;novo-link&amp;gt; &amp;lt;&lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;-dos-ficheiros&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Onde &lt;code&gt;&amp;lt;novo-link&lt;/code&gt;&amp;gt; corresponde ao local a que irá corresponder o &lt;code&gt;&amp;lt;local-dos-ficheiros&amp;gt;&lt;/code&gt;. No meu caso, tive que executar o seguinte comando:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;MKLINK /D C:&lt;span class=&#34;se&#34;&gt;\W&lt;/span&gt;ebServer&lt;span class=&#34;se&#34;&gt;\A&lt;/span&gt;pache24&lt;span class=&#34;se&#34;&gt;\h&lt;/span&gt;tdocs&lt;span class=&#34;se&#34;&gt;\m&lt;/span&gt;vc D:&lt;span class=&#34;se&#34;&gt;\D&lt;/span&gt;evelopment&lt;span class=&#34;se&#34;&gt;\m&lt;/span&gt;vc&lt;span class=&#34;se&#34;&gt;\p&lt;/span&gt;ublic_html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Isto pode ser, obviamente, feito também em &lt;em&gt;linux&lt;/em&gt; e &lt;em&gt;OS X&lt;/em&gt; porém não sei como, mas caso tenha uma distribuição Linux ou OS X, recomendo a leitura desta &lt;a href=&#34;http://apple.stackexchange.com/questions/115646/how-can-i-create-a-symbolic-link-in-terminal&#34;&gt;página&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;saindo-da-dica:2145cfb95ae0f5633dadec63c3e54ade&#34;&gt;Saindo da dica&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Como pode ver pela estrutura da aplicação, ainda há muito a fazer. Em breve lançarei a segunda parte desta mini-série de artigos. Esperemos que tenham gostado deste e que gostem dos próximos artigos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP - Como utilizar o Gettext para traduções [Parte 2]</title>
      <link>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes-parte-2</link>
      <pubDate>Sun, 28 Sep 2014 15:06:47 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes-parte-2</guid>
      <description>&lt;p&gt;Na &lt;a href=&#34;https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes/&#34;&gt;primeira parte&lt;/a&gt; deste artigo, ensinámos a configurar o Gettext em conjunto com o PHP de forma a que hoje possamos criar as nossas primeiras traduções.&lt;/p&gt;

&lt;p&gt;Agora é hora de criarmos as nossas primeiras traduções. Para isso, podemos instalar um programa chamado &lt;strong&gt;Poedit&lt;/strong&gt; que nos vai ajudar. Podem descarregá-lo &lt;a href=&#34;http://poedit.net/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Abra o Poedit e clique em &lt;strong&gt;Ficheiro → Novo&lt;/strong&gt; e selecione a língua &lt;strong&gt;mãe&lt;/strong&gt; do seu site. No nosso caso, é português de Portugal (pt-PT). Depois disso, guarde o ficheiro em &lt;code&gt;lang/site_multi_lingua.pot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Logo de seguida, clique em &lt;strong&gt;Extrair das fontes&lt;/strong&gt;. Agora, adicione o caminho do seu site na seção &lt;strong&gt;Caminhos&lt;/strong&gt; da aba &lt;strong&gt;Caminhos das fontes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;De seguida, dirija-se à aba &lt;strong&gt;Propriedades da tradução&lt;/strong&gt; e dê um nome ao projeto.Pode ainda escolher outras opções.&lt;/p&gt;

&lt;p&gt;Na última aba, &lt;strong&gt;Palavras-chave das fontes&lt;/strong&gt;, adicione &lt;code&gt;__&lt;/code&gt;  e &lt;code&gt;_e&lt;/code&gt;. Depois clique em &lt;strong&gt;OK&lt;/strong&gt; e espere que os ficheiros sejam analisados.&lt;/p&gt;

&lt;p&gt;Caso ocorra algum erro relacionado com caracteres não ASCII, clique em &lt;strong&gt;Catálogo → Propriedades → Codificação do código fonte&lt;/strong&gt; e selecione UTF-8. Depois clique em &lt;strong&gt;Atualizar.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agora deverá ver um ecrã semelhante ao seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/poedit00.jpg&#34; alt=&#34;Poedit&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Guarde este ficheiro e depois vá a &lt;strong&gt;Novo → Novo de ficheiro POT/PO&lt;/strong&gt;. Selecione o ficheiro base que gravou antes e escolha a nova língua.&lt;/p&gt;

&lt;p&gt;Agora basta clicar no item a traduzir e depois escrever a tradução na caixa de texto na parte de baixo do programa.&lt;/p&gt;

&lt;p&gt;Depois, grave o ficheiro em &lt;code&gt;lang/en_GB/LC_MESSAGES/site_multi_lingua.po&lt;/code&gt;. Altere &lt;code&gt;en_GB&lt;/code&gt; pela língua que criou.&lt;/p&gt;

&lt;p&gt;Agora, para testar se está tudo a funcionar, basta digital no URL &lt;code&gt;/?lang=en_GB&lt;/code&gt; ou outra que queira testar.&lt;/p&gt;

&lt;p&gt;Pode ver &lt;a href=&#34;https://github.com/hacdias/labs/tree/master/php/multi-lang&#34;&gt;neste repositório do GitHub&lt;/a&gt; todo o código que foi aqui produzido com alguns exemplos de linguagem adicionais.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Refiro ainda que o Gettext faz &lt;em&gt;caching _de todas as _strings&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>PHP - Como utilizar o Gettext para traduções [Parte 1]</title>
      <link>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes</link>
      <pubDate>Sun, 21 Sep 2014 11:07:03 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes</guid>
      <description>

&lt;p&gt;Como prometido no &lt;a href=&#34;https://henriquedias.com/explanations/php-wordpress-comandos-printf-sprintf/&#34;&gt;último artigo&lt;/a&gt;, hoje irá começar uma pequena saga de dois ou três artigos sobre como utilizar o Gettext no PHP.&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;gettext&lt;/strong&gt; podemos ter um site disponível em diversas linguagens de forma muito fácil e sem complicações. Nesta primeira parte, irá ser abordado como &lt;strong&gt;configurar o gettext&lt;/strong&gt; e as suas &lt;strong&gt;funções&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O gettext pode ser configurado no PHP através de uma extensão nativa ou através do uso de uma biblioteca separada.Nós iremos utilizar o segundo método por ser mais simples e fácil de configurar.&lt;/p&gt;

&lt;h2 id=&#34;download-e-estruturação:f7cadadb33380485931edab1f79d8ea6&#34;&gt;Download e estruturação&lt;/h2&gt;

&lt;p&gt;Antes de mais nada, aviso que é &lt;strong&gt;necessário&lt;/strong&gt; ter a extensão &lt;em&gt;mbstring&lt;/em&gt; ativada nas definições do PHP. Em primeiro lugar, deve fazer o &lt;em&gt;download&lt;/em&gt; do &lt;strong&gt;php-gettext&lt;/strong&gt; nesta &lt;a href=&#34;https://launchpad.net/php-gettext/&#34;&gt;página&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Depois de efetuar o &lt;em&gt;download&lt;/em&gt;, irá ter que descompactar o ficheiro transferido. Após a sua descompactação irá encontrar diversos ficheiros. Apenas iremos precisar dos seguintes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gettext.inc&lt;/code&gt; → Aliases de funções para utilizar no sistema;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gettext.php&lt;/code&gt; → Funções do gettext;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;streams.php&lt;/code&gt; → Classes e métodos que permitem ler ficheiros do gettext.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora crie uma pasta cujo conteúdo seja semelhante ao seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;site-multi-lingua/
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; lib /
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; gettext.inc
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; gettext.php
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;      streams.php
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; langs/
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; config.php
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; i18n.php
   index.php
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode visualizar, os ficheiros do gettext foram colocados dentro de uma pasta chamada `&lt;code&gt;lib&lt;/code&gt; e ainda foram adicionados três outros ficheiros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;config.php&lt;/code&gt; → faz o carregamento das configurações;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i18n.php&lt;/code&gt; → contém a inicialização do gettext;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inicialmente tem que ser definida uma linguagem padrão. Nós iremos utilizar &amp;ldquo;pt_PT&amp;rdquo; ou seja, Português de Portugal.&lt;/p&gt;

&lt;p&gt;Para isso, edite o seu ficheiro _config.php _e coloque o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LANG&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pt_PT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;inicialização-do-gettext:f7cadadb33380485931edab1f79d8ea6&#34;&gt;Inicialização do Gettext&lt;/h2&gt;

&lt;p&gt;Agora que já existe uma linguagem padrão definida, a inicialização do gettext deve ser feita porém, primeiro tem que memorizar os seguintes conceitos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;locale&lt;/code&gt; → uma &lt;em&gt;string&lt;/em&gt; no formato &lt;code&gt;xx_XX&lt;/code&gt; que indica a linguagem. &amp;ldquo;pt&lt;em&gt;BR&amp;rdquo; é português do Brasil, &amp;ldquo;en_US&amp;rdquo; corresponde a Inglês dos Estados Unidos. Pode ler mais sobre estes prefixos [aqui](&lt;a href=&#34;http://pt.wikipedia.org/wiki/Internacionaliza%C3%A7%C3%A3o&#34;&gt;http://pt.wikipedia.org/wiki/Internacionaliza%C3%A7%C3%A3o&lt;/a&gt;&lt;/em&gt;(software)).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;textdomain&lt;/code&gt; → quer dizer &amp;ldquo;domínio de texto&amp;rdquo; e é um local onde as traduções vão ser colocadas. No nosso caso, apenas iremos utilizar um &lt;em&gt;textdomain&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora, deve colocar no ficheiro &lt;strong&gt;i18n.php &lt;/strong&gt;o seguinte conteúdo:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;require_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;config.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;LANG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;site_multi_lingua&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$locales_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LANGUAGE=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LANG=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LC_ALL=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LC_MESSAGES=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;require_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lib/gettext.inc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;_setlocale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LC_ALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;_setlocale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LC_CTYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;_bindtextdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locales_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;_bind_textdomain_codeset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;_textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Poça! Tanta coisa! Mas para que serve tudo isto? Na &lt;strong&gt;linha 3&lt;/strong&gt;, o ficheiro &lt;code&gt;config.php&lt;/code&gt; é chamado pois é este que contém a constante da linguagem. Assim podemos já podemos utilizar essa constante neste ficheiro.&lt;/p&gt;

&lt;p&gt;Nas linhas seguintes (&lt;strong&gt;5 a 7&lt;/strong&gt;), a variável &lt;code&gt;$locale&lt;/code&gt; é definida, tal como o domínio de texto e o local onde irão estar os ficheiros de tradução que, neste caso, será numa pasta chamada lang .&lt;/p&gt;

&lt;p&gt;Mais à frente, nas &lt;strong&gt;linhas 8 a 9&lt;/strong&gt;, verificamos se existe uma variável chamada &lt;code&gt;lang&lt;/code&gt; a ser passada pelo URL. Se sim, reescrevemos o valor da variável &lt;code&gt;$locale&lt;/code&gt; com essa linguagem.&lt;/p&gt;

&lt;p&gt;Nas linhas seguintes, &lt;strong&gt;12 a 5&lt;/strong&gt;, as variáveis de ambiente do sistema operativo são alteradas para o locale  que está a ser utilizado.&lt;/p&gt;

&lt;p&gt;Na linha cuja posição é &lt;strong&gt;17&lt;/strong&gt;, a biblioteca php-gettext é carregada sendo logo a seguir (&lt;strong&gt;19 a 20&lt;/strong&gt;), o locale também carregado para o gettext.&lt;/p&gt;

&lt;p&gt;Seguidamente, &lt;strong&gt;nas linhas 22 a 24&lt;/strong&gt;, o textdomain é defido, tal como a codificação que será utilizada nesses ficheiros (UTF-8) e ainda dizemos onde vão estar as traduções.&lt;/p&gt;

&lt;p&gt;De seguida é criada uma função chamada &lt;code&gt;_e()&lt;/code&gt; que nos permite imprimir o resultado da função &lt;code&gt;__()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora, copiem e colem o seguinte no &lt;code&gt;index.php&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;require_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;i18n.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Olá Mundo!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Olá Mundo!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;De momento, ainda não existe nada de extraordinário a acontecer. Na próxima parte deste tutorial iremos falar em como criar as traduções!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git - Uma história e repositórios do GitHub</title>
      <link>https://henriquedias.com/tutorials/git-historia-repositorios-github</link>
      <pubDate>Tue, 02 Sep 2014 14:09:59 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/git-historia-repositorios-github</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; é um sistema de controlo de versão e gestão de código fonte extremamente utilizado em todos os cantos do mundo.&lt;/p&gt;

&lt;p&gt;Hoje vamos aprender a criar um simples repositório no GitHub e fazer a primeira &amp;ldquo;commit&amp;rdquo; ou seja, enviar os primeiros dados para o repositório.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/git00.jpg&#34; alt=&#34;Git - Uma história e repositórios do GitHub&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;um-pouco-de-história:51197f15ea7f7b00898d59ae0541182c&#34;&gt;Um pouco de história&amp;hellip;&lt;/h2&gt;

&lt;p&gt;O kernel (ou núcleo) do Linux é um projeto de código aberto com um tamanho muito grande. No período de 1991 a 2002 houveram grandes mudanças no kernel do Linux visto que foi o período onde a manutenção foi maior.&lt;/p&gt;

&lt;p&gt;Em 2002, este projeto começou a utilizar um sistema de controlo de versão proprietário, o &lt;a href=&#34;http://www.bitkeeper.com/&#34;&gt;BitKeeper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Três anos mais tarde, em 2015, o relacionamento existente entre a comunidade que desenvolvia o Kernel e a empresa do BitKeeper desfez-se e isso levou a comunidade a pensar numa nova solução.&lt;/p&gt;

&lt;p&gt;A comunidade começou então a desenvolver um novo sistema sendo que os objetivos que pretendiam atingir com este sistema eram a &lt;strong&gt;velocidade&lt;/strong&gt;, &lt;strong&gt;um software robusto, design simples&lt;/strong&gt; e capaz de lidar com &lt;strong&gt;grandes projetos&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Foi assim que nasceu o Git. Ao longo dos anos tem vindo a tornar-se um sistema de controlo de versão mundialmente conhecido e utilizado.&lt;/p&gt;

&lt;h2 id=&#34;porquê-o-github:51197f15ea7f7b00898d59ae0541182c&#34;&gt;Porquê o GitHub?&lt;/h2&gt;

&lt;p&gt;O tutorial de hoje é, em parte para o GitHub, mas a restante parte é indiferente pois basta ser um repositório Git.&lt;/p&gt;

&lt;p&gt;Estamos a utilizar o GitHub por ser um serviço muito conhecido e utilizado e a criação de repositórios ser simples, fácil e rápida.&lt;/p&gt;

&lt;h2 id=&#34;let-s-start:51197f15ea7f7b00898d59ae0541182c&#34;&gt;&lt;em&gt;Let&amp;rsquo;s start&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Os requisitos são ter uma ligação à Internet, ter o Git instalado no vosso computador &lt;a href=&#34;http://git-scm.com/&#34;&gt;através desta página&lt;/a&gt; e ter uma conta no &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Assim, começamos por ir ao site do GitHub e clicamos no botão &lt;strong&gt;+ → New Repository&lt;/strong&gt; como podem ver na imagem abaixo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/github01.jpg&#34; alt=&#34;Primeiro Passo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Depois tens que preencher o nome do repositório, a descrição e, por agora, não são precisas mais configurações. No final é só clicar no botão verde.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/github02.jpg&#34; alt=&#34;Segundo Passo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Copia o código HTTPS ou SSH utilizando o botão que aparece do lado direito.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/github03.jpg&#34; alt=&#34;Terceiro Passo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora que já temos o repositório configurado no GitHub, vamos colocá-lo no nosso computador. Esta parte agora &lt;strong&gt;é igual independentemente do serviço utilizado&lt;/strong&gt;, GitHub, Bitbucket, etc, basta ser Git.&lt;/p&gt;

&lt;h2 id=&#34;git-git-git-e-mais-git:51197f15ea7f7b00898d59ae0541182c&#34;&gt;Git, git, git e mais git&lt;/h2&gt;

&lt;p&gt;Começa por abrir a linha de comandos/shell ou qualquer outra coisa que use o teu sistema operativo no local onde queres que o repositório seja clonado/copiado/armazenado.&lt;/p&gt;

&lt;p&gt;Tem em atenção que, se abrires na pasta &lt;code&gt;D:\dev&lt;/code&gt;, o repositório vai ser clonado em &lt;code&gt;D:\dev\nomeDoRepo&lt;/code&gt;. Executa então o seguinte comando:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;git clone &amp;lt;URL-QUE-COPIASTE&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora é só esperar uns segundos até que o repositório seja clonado. Deves receber uma mensagem semelhante à seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;Cloning into &lt;span class=&#34;s1&#34;&gt;&amp;#39;RepositorioDeExemploCOXPE&amp;#39;&lt;/span&gt;...
warning: You appear to have cloned an empty repository.
Checking connectivity... &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora naveguem até à pasta do repositório utilizando o comando cd &lt;NOME-DO-REPO&gt; . Agora que estão dentro da pasta, devem ver uma pasta chamada &lt;code&gt;.git&lt;/code&gt; oculta.&lt;/p&gt;

&lt;p&gt;Vamos então criar o nosso primeiro ficheiro para enviar para o repositório. Comecem por executar o seguinte comando:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nb&#34;&gt;echo &lt;/span&gt;Este é o meu primeiro repositório &amp;gt; README.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esse comando vai fazer com que seja criado um ficheiro &lt;code&gt;README.md&lt;/code&gt; com o conteúdo &amp;ldquo;Este é o meu primeiro repositório&amp;rdquo; (sem aspas). Agora é hora de enviar este ficheiro para o servidor. Para isso executamos um dos seguintes comandos:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c&#34;&gt;#Para adicionar apenas UM ficheiro&lt;/span&gt;
git add &amp;lt;nome-do-ficheiro&amp;gt;

&lt;span class=&#34;c&#34;&gt;#Para adicionar todas as novas modificações&lt;/span&gt;
git add -all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora temos que adicionar uma mensagem que vai identificar este envio. Para isso escreve o seguinte, substituindo &amp;ldquo;My Message&amp;rdquo; pelo que quiseres (mas sempre com aspas):&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;quot;My Message&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora é hora de enviar as mudanças para o repositório remoto. Para isso executa o seguinte comando que irá enviar as alterações para a &amp;ldquo;branch&amp;rdquo; master:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;git push origin

&lt;span class=&#34;c&#34;&gt;#Depois insere os dados de utilizador quando pedido&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;pronto:51197f15ea7f7b00898d59ae0541182c&#34;&gt;Pronto&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Pronto, já está! Se fores agora ao repositório que criaste irás ver o novo ficheiro. Como o ficheiro foi denominado &lt;code&gt;README.md&lt;/code&gt;, este estará sempre visível quando abrimos o repositório na parte abaixo da listagem dos ficheiros.&lt;/p&gt;

&lt;p&gt;Espero que tenham gostado deste pequeno tutorial :)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fiquem atentos. Em breve teremos novidades com o &lt;a href=&#34;http://pplware.com&#34;&gt;Pplware&lt;/a&gt;:)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Como utilizar a API de Passwords do PHP 5.5&#43;</title>
      <link>https://henriquedias.com/tutorials/como-utilizar-api-passwords-php-55</link>
      <pubDate>Wed, 20 Aug 2014 22:16:15 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/como-utilizar-api-passwords-php-55</guid>
      <description>

&lt;p&gt;Como muitas das novidades introduzidas na &lt;a href=&#34;http://php.net/manual/en/migration55.changes.php&#34;&gt;versão 5.5&lt;/a&gt; do PHP, a API de passwords não passou despercebida aos desenvolvedores. Hoje vamos falar da criação de hash de passwords utilizando esta API.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/api_passwords.jpg&#34; alt=&#34;Como utilizar a API de Passwords do PHP 5.5+&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Antes de começarmos a analisar como se criam as passwords, vamos ver que novas funções trouxe &lt;a href=&#34;http://php.net/manual/en/book.password.php&#34;&gt;esta API&lt;/a&gt; para o PHP:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;password_get_info&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password_hash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password_needs_rehash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password_verify&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cada uma tem uma função diferente porém estão todas relacionadas. Assim, vamos falar de cada uma destas funções. Vamos começar!&lt;/p&gt;

&lt;h2 id=&#34;password-hash:f2cd69faba962abe878d8e6257d3bccb&#34;&gt;password_hash&lt;/h2&gt;

&lt;p&gt;Esta função pode ser considerada a principal do conjunto pois é com ela que criamos as &lt;em&gt;hash&lt;/em&gt; e deve ser utilizada da seguinte forma:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;$password = &amp;#39;a_minha_password&amp;#39;;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Da seguinte forma podemos gerar a hash de uma password&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * utilizando o algoritmo que está definido em DEFAULT.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Na versão 5.5.0 do PHP este algoritmo correponde ao BCRYPT&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * A hash vai ter o comprimento de, no mínimo, 60 caracteres.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Este comprimento pode alterar em novas versões do PHP.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;password_hash($password, PASSWORD_DEFAULT);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Podemos ainda definir alguns parâmetros opcionais nomeadamente o &lt;code&gt;cost&lt;/code&gt; (&amp;ldquo;custo&amp;rdquo;) e o &lt;code&gt;salt&lt;/code&gt; (&amp;ldquo;sal&amp;rdquo;) da seguinte forma:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;$password = &amp;#39;a_minha_password&amp;#39;;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Da seguinte forma podemos gerar a hash de uma password&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * utilizando o algoritmo BCRYPT.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Podemos definir duas opções no terceiro parâmetro:&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *  COST  =&amp;gt;  Por padrão, será criado um novo por cada nova&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * hash criada porém pode ser definido.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *  SALT  =&amp;gt;  Por padrão, o valor 10 irá ser utilizado porém&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * pode ser alterado à semelhança do anterior.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$options = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;cost&amp;#39;  =&amp;gt; 13,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;salt&amp;#39;  =&amp;gt; mcrypt_create_iv(25, MCRYPT_DEV_URANDOM)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  );&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;password_hash($password, PASSWORD_BCRYPT, $options);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Acrescento ainda que a função retornará &lt;code&gt;false&lt;/code&gt; em caso de erro.&lt;/p&gt;

&lt;h2 id=&#34;password-verify:f2cd69faba962abe878d8e6257d3bccb&#34;&gt;password_verify&lt;/h2&gt;

&lt;p&gt;Depois de criarmos a &lt;em&gt;hash&lt;/em&gt; vamos precisar de, evidentemente, confirmá-la. Para confirmar se uma password corresponde a uma hash basta utilizarmos esta função da seguinte forma:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Para utilizar esta função basta colocar a password&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * a verificar no primeiro parâmetro e a hash no segundo.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Não precisa de se preocupar se colocou algum &amp;quot;salt&amp;quot; ou&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * &amp;quot;cost&amp;quot; personalizados pois esta informação está embutida&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * na hash.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * A função irá returnar os valores &amp;quot;true&amp;quot; ou &amp;quot;false&amp;quot;.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$password = &amp;#39;teste&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$hash = &amp;#39;$2y$10$M.3t0/gmB12IrSETmINf7uy9XhruDrmB8vjaktfd5vC8AfVPH695.&amp;#39;;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;password_verify($password, $hash);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;password-get-info:f2cd69faba962abe878d8e6257d3bccb&#34;&gt;password_get_info&lt;/h2&gt;

&lt;p&gt;Esta informação permite-nos obter a informação acerca de uma hash. A informação obtida corresponde ao algoritmo, o seu nome e as opções dadas quando criámos a hash. Exemplo:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;//Criação de uma hash de exemplo&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$options = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;cost&amp;#39;  =&amp;gt; 13,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;salt&amp;#39;  =&amp;gt; mcrypt_create_iv(25, MCRYPT_DEV_URANDOM)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  );&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$hash = password_hash(&amp;#39;a_minha_password&amp;#39;, PASSWORD_BCRYPT, $options);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Utilizando a função password_get_info, vamos obter as diversas opções&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * enviadas quando criámos a hash.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$info = password_get_info($hash);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Assim, var_dump($info) irá retornar o seguinte:&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * array(3) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * 	[&amp;quot;algo&amp;quot;]=&amp;gt; int(1)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *	[&amp;quot;algoName&amp;quot;]=&amp;gt; string(6) &amp;quot;bcrypt&amp;quot;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *	[&amp;quot;options&amp;quot;]=&amp;gt; array(1)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *		{ [&amp;quot;cost&amp;quot;]=&amp;gt; int(13) }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *	}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;password-needs-rehash:f2cd69faba962abe878d8e6257d3bccb&#34;&gt;password_needs_rehash&lt;/h2&gt;

&lt;p&gt;Esta função permite-nos confirmar se uma hash já criada corresponde a uma array de opções e a um algoritmos. Podem observar mais no seguinte exemplo:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;//Criação de uma hash de exemplo&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$options = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;cost&amp;#39;  =&amp;gt; 13,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;salt&amp;#39;  =&amp;gt; mcrypt_create_iv(25, MCRYPT_DEV_URANDOM)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  );&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$hash = password_hash(&amp;#39;a_minha_password&amp;#39;, PASSWORD_BCRYPT, $options);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * A função seguinte irá retornar true porque todas as opções corresponde&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * às que foram dadas anteriormente.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;password_needs_rehash($hash, 0, $options);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se tiver qualquer dúvida relacionada ao segundo parâmetro da função, sugiro-lhe a leitura &lt;a href=&#34;http://php.net/manual/pt_BR/password.constants.php&#34;&gt;desta página&lt;/a&gt; e também que verifique os valores obtidos com &lt;code&gt;password_get_info&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Espero que dê bom uso a esta função :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como utilizar o Bower, um gestor de pacotes web</title>
      <link>https://henriquedias.com/tutorials/como-utilizar-o-bower-um-gestor-de-pacotes-web</link>
      <pubDate>Mon, 18 Aug 2014 12:01:12 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/como-utilizar-o-bower-um-gestor-de-pacotes-web</guid>
      <description>&lt;p&gt;O &lt;strong&gt;Bower&lt;/strong&gt; é um excelente gestor de pacotes web. Utilizando este gestor, torna-se mais fácil e prático adicionar e atualizar as diversas bibliotecas que utilizamos nos nossos sites/web-apps.&lt;/p&gt;

&lt;p&gt;Hoje vamos instalar o Bower e depois vamos criar um ficheiro para gerir os pacotes de um site de exemplo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/bower.jpg&#34; alt=&#34;Como utilizar o Bower, um gestor de pacotes web&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Utilizar o &lt;a href=&#34;http://bower.io/&#34;&gt;Bower&lt;/a&gt; é bastante simples. Vamos começar com os requisitos. Para podermos utilizar este gestor de pacotes, temos que ter instalado o &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt;  no nosso computador. Podem descarregar o Node.js no site oficial.&lt;/p&gt;

&lt;p&gt;Depois de terem o node.js instalado no vosso computador, vamos instalar o Bower. Para isso, abram a linha de comandos do vosso SO, se for Windows corram como Administrador e escrevam o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;npm install -g bower
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora, existem várias formas de fazer o dowload dos pacotes que precisamos no nosso projeto. Nós vamos começar por analisar as &amp;ldquo;menos divertidas&amp;rdquo; e depois passaremos à que, talvez, possa ser considerada a &amp;ldquo;melhor&amp;rdquo;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c&#34;&gt;# Instala através do ficheiro bower.json&lt;/span&gt;
bower install
&lt;span class=&#34;c&#34;&gt;# Instala um pacote específico&lt;/span&gt;
bower install package
&lt;span class=&#34;c&#34;&gt;# Instala uma versão específica de um pacote&lt;/span&gt;
bower install package#version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como podem ver, existem essas três formas mencionadas acima. Podemos substituir &lt;strong&gt;package&lt;/strong&gt; por diversos itens como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nome do pacote como angularjs&lt;/li&gt;
&lt;li&gt;Ficheiro zip ou tar remoto ou local&lt;/li&gt;
&lt;li&gt;Repositório Git remoto ou local&lt;/li&gt;
&lt;li&gt;Atalho para repositórios do GitHub&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assim, para instalar o jQuery, basta correr o seguinte comando para que seja criada uma pasta no caminho &lt;strong&gt;bower_components\jquery&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;bower install jquery
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora vamos criar um ficheiro chamado &lt;code&gt;bower.json&lt;/code&gt; para descarregar a versão 1.11.0 do jQuery e a versão mais recente do &lt;strong&gt;angular.js&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;projeto-x&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;jquery&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;1.11.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;angular&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora basta correr o seguinte comando para efetuar o download dos pacotes:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;bower install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora, imaginando que saia uma nova versão do angular.js, bastava correr o seguinte comando para atualizar o angular e manter o jQuery na mesma versão:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;bower update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como podem ver, é bastante simples fazer o download de pacotes utilizando o Bower. Para os chamar através do HTML basta fazermos como sempre: utilizar as tags &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; e utilizar o URL absoluto ou relativo para o local onde estão os ficheiros.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Guardar os erros do PHP num ficheiro com o .htaccess</title>
      <link>https://henriquedias.com/tutorials/guardar-os-erros-php-num-ficheiro-com-o-htaccess</link>
      <pubDate>Thu, 14 Aug 2014 10:41:38 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/guardar-os-erros-php-num-ficheiro-com-o-htaccess</guid>
      <description>&lt;p&gt;Quando os programadores de soluções web estão a programar alguma aplicação é normal que possam surgir erros durante o desenvolvimento e a linguagem de programação, por norma, mostra-os no browser.&lt;/p&gt;

&lt;p&gt;Mesmo depois do desenvolvimento concluído e do produto lançado, podem surgir erros porém é pouco profissional mostrar os erros &amp;ldquo;à paisana&amp;rdquo; no browser do utilizador sendo até uma boa &amp;ldquo;ajuda&amp;rdquo; para hackers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/phperros.jpg&#34; alt=&#34;Guardar os erros do PHP num ficheiro com o .htaccess&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hoje vamos explicar como podemos utilizar o ficheiro &lt;code&gt;.htaccess&lt;/code&gt; para fazer o registo em log (&lt;em&gt;logging&lt;/em&gt;) dos erros dados pela linguagem de programação PHP num ficheiro.&lt;/p&gt;

&lt;p&gt;Como devem ter previsto, o único ficheiro que é necessário modificar é o &lt;code&gt;.htaccess&lt;/code&gt;. Vamos começar por definir algumas &lt;code&gt;php_flags&lt;/code&gt; de forma a não mostrar nenhum erro ao utilizador.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c&#34;&gt;# Não mostra erros de inicialização&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; display_startup_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Não mostra os restantes erros&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; display_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Não mostra erros de markup HTML&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; html_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O código acima, e o restante, está comentado para saber o que faz cada linha. Agora, depois de termos desativado os erros &amp;ldquo;ao público&amp;rdquo;, vamos fazer com que estes sejam guardados num ficheiro.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c&#34;&gt;# Ativa o registo em log dos erros&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; log_errors &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Desativa a ignoração a erros repetidos&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; ignore_repeated_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Desativa &amp;quot;Ignorar erros de fonte única&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; ignore_repeated_source &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Ativa log de vazamentos de memória do php&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; report_memleaks &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Preserva os erros mais recentes&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; track_errors &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Desativa a formatação de erros com links de referência&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; docref_root &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; docref_ext &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Especifica um caminho para o ficheiro de log&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; error_log &lt;span class=&#34;sx&#34;&gt;/home/error.log&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;# Especifica para guardar todos os erros&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; error_reporting -1
&lt;span class=&#34;c&#34;&gt;# Desativa o tamanho máximo de erros&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; log_errors_max_len &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora os erros já estão a ser guardados num ficheiro de log, mas continua a existir um problema. Se acedermos ao URL onde está guardado, vamos poder aceder ao ficheiro.&lt;/p&gt;

&lt;p&gt;Isto pode ser utilizado como arma por qualquer pessoa, nomeadamente por &lt;em&gt;hackers&lt;/em&gt;. Vamos então proteger o ficheiro de forma a que o público não lhe tenha acesso.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;c&#34;&gt;# Proteger o ficheiro&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;Files&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;error.log&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;nb&#34;&gt;Order&lt;/span&gt; allow,deny
 &lt;span class=&#34;nb&#34;&gt;Deny&lt;/span&gt; from &lt;span class=&#34;k&#34;&gt;all&lt;/span&gt;
 &lt;span class=&#34;nb&#34;&gt;Satisfy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;All&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Files&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Não se esqueçam de colocar o nome do ficheiro correto substituindo &lt;code&gt;error.log&lt;/code&gt; pelo nome que querem. Alerto também para alterarem o caminho &lt;code&gt;/home/error.log&lt;/code&gt; para o caminho em questão. Aqui está o código completo sem qualquer comentário, excelente para ser utilizado:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; display_startup_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; display_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; html_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; log_errors &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; ignore_repeated_errors &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; ignore_repeated_source &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; report_memleaks &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_flag&lt;/span&gt; track_errors &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; docref_root &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; docref_ext &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; error_log &lt;span class=&#34;sx&#34;&gt;/home/error.log&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; error_reporting -1
&lt;span class=&#34;nb&#34;&gt;php_value&lt;/span&gt; log_errors_max_len &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;Files&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;error.log&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;nb&#34;&gt;Order&lt;/span&gt; allow,deny
 &lt;span class=&#34;nb&#34;&gt;Deny&lt;/span&gt; from &lt;span class=&#34;k&#34;&gt;all&lt;/span&gt;
 &lt;span class=&#34;nb&#34;&gt;Satisfy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;All&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Files&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Depois de fazerem as edições no caminho e nome do ficheiro, basta guardarem o vosso .htaccess  e verificam que os erros produzidos pelo PHP irão ser salvos no ficheiro em questão.&lt;/p&gt;

&lt;p&gt;Acrescento que, a qualquer momento, pode utilizar a função &lt;code&gt;error_log(&#39;Erro aqui&#39;)&lt;/code&gt; do PHP para enviar um erro para o log.&lt;/p&gt;

&lt;p&gt;Espero que este artigo vos tenha ajudado :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edição:&lt;/strong&gt; Tal como o leitor António mencionou, isto apenas funciona caso o PHP tenha o &lt;a href=&#34;http://support.tigertech.net/php-value&#34;&gt;módulo do Apache ativo. &lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPress: adicionar menus de administração [Parte 1]</title>
      <link>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao</link>
      <pubDate>Sat, 02 Aug 2014 11:27:37 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao</guid>
      <description>

&lt;p&gt;O &lt;strong&gt;WordPress&lt;/strong&gt; é, como vocês sabem, um dos mais populares CMS do mundo. Isto, se não o for. Um dos nossos primeiros artigos foi referente ao WordPress e ensinámos a &lt;a href=&#34;https://henriquedias.com/tutorials/remover-hash-dos-links-continuar-a-ler/&#34;&gt;remover a hash dos links &amp;ldquo;Ler mais&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hoje vamos dar continuação às dicas e tutoriais sobre este CMS. Se vocês utilizam o WordPress com um tema pago, já devem ter reparado que este vem com um menu de personalização próprio criado pelo(s) autor(es) do tema. Hoje vamos ensinar-vos a criar estes menus.&lt;/p&gt;

&lt;h3 id=&#34;1-criar-ficheiro-das-opções-e-chamá-lo:3fc6ecadd2dd3ef718d67d2dce26a6fd&#34;&gt;1. Criar ficheiro das opções e chamá-lo&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;O tutorial é direcionado para &lt;strong&gt;temas&lt;/strong&gt; porém a criação dos menus faz-se da mesma forma nos &lt;strong&gt;plugins&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Começaremos por criar um ficheiro chamado &lt;code&gt;admin.php&lt;/code&gt; na pasta &lt;code&gt;inc&lt;/code&gt; do vosso tema (ou plugin). Caso esta pasta não exista, podem criá-la ou colocá-lo numa outra pasta que queiram.&lt;/p&gt;

&lt;p&gt;Antes de continuarmos o desenvolvimento deste ficheiro, vamos chamar este ficheiro através do &lt;code&gt;functions.php&lt;/code&gt;. &lt;strong&gt;Neste, coloquem o seguinte código:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;//...&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;require get_template_directory() . &amp;#39;/inc/admin.php&amp;#39;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este pequeno trecho de código chama o ficheiro através do comando &lt;code&gt;require&lt;/code&gt; e da localização do mesmo. Para obtermos a localização da pasta principal do tema utilizamos a função &lt;code&gt;get_template_directory()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Depois concatenamos o caminho do tema ao resto do directório que, no nosso caso é &lt;code&gt;/inc/admin.php&lt;/code&gt; . Se colocaram noutra pasta não se esqueçam de alterar o caminho.&lt;/p&gt;

&lt;h3 id=&#34;2-hora-de-criar-as-opções:3fc6ecadd2dd3ef718d67d2dce26a6fd&#34;&gt;2. Hora de criar as opções&lt;/h3&gt;

&lt;p&gt;Agora sim, vamos virar-nos para o ficheiro &lt;code&gt;admin.php&lt;/code&gt;. Neste ficheiro irá estar todo o código referente às opções de administração do tema.&lt;/p&gt;

&lt;p&gt;Neste tutorial, iremos criar uma variável com um dado que será depois utilizada no tema. Assim, aprendem como se faz e depois podem criar vocês próprios as opções que quiserem.&lt;/p&gt;

&lt;p&gt;Vamos começar por criar a seguinte função:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_admin_menus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//Colocaremos aqui os menus&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;add_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;admin_menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_admin_menus&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Não se esqueça de substituir &lt;code&gt;themeslug&lt;/code&gt; pelo prefixo das funções do seu tema. Criámos uma pequena função que vai servir para adicionar os menus à barra de administração do WordPress.&lt;/p&gt;

&lt;p&gt;Depois adicionamos essa função utilizando a função add_action . Este comando liga uma &lt;strong&gt;função&lt;/strong&gt; a uma &lt;strong&gt;ação&lt;/strong&gt;. Podem ler mais sobre a mesma &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/add_action&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem várias formas de adicionar um menu. Podemos adicionar um sub-menu ou um menu. Vou dar-vos um exemplo com algo já existente no WP:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/wpsubmenu.png&#34; alt=&#34;WordPress Menu e Sub-menu&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Settings&lt;/strong&gt; é um menu.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Media&lt;/strong&gt; é um sub-menu do menu &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para adicionar um sub-menu a um menu, utilizamos a função &lt;code&gt;add_theme_page&lt;/code&gt; que tem a seguinte sintaxe:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;add_theme_page( $titulo_da_pagina, $titulo_do_menu, $permissoes, $slug_do_menu, $funcao);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos por partes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$titulo_da_pagina&lt;/code&gt;  -&amp;gt; Obviamente que é o título da página;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$titulo_do_menu&lt;/code&gt;  -&amp;gt; Nome que irá aparecer na barra de administração;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$permissoes&lt;/code&gt;  -&amp;gt; O mínimo de permissões que o utilizador deve ter para aceder à página;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$slug_do_menu&lt;/code&gt;  -&amp;gt; O nome do menu sem caracteres especiais e sem maiúsculas para ser utilizado no URL;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$funcao&lt;/code&gt;  -&amp;gt; A função que vai &amp;ldquo;tratar&amp;rdquo; deste sub-menu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para criar um menu de nível principal (como &lt;em&gt;Settings&lt;/em&gt;), utiliza-se a seguinte sintaxe:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;add_menu_page( $titulo_da_pag, $titulo_do_menu, $permissoes, $slug_do_menu, $funcao, $icon_url, $posicao );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A sintaxe é muito parecida mas conta com mais duas variáveis. A &lt;code&gt;$icon_url&lt;/code&gt; serve para indicar o caminho do ícone e $posicao  é a posição na barra lateral da &lt;em&gt;dashboard&lt;/em&gt;. Ambas são opções opcionais e podes ler mais sobre elas &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/add_menu_page&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vamos, finalmente, criar o menu. Já conhecendo a sintaxe, vou substituir o comentário que escrevemos no ficheiro &lt;code&gt;admin.php&lt;/code&gt; pela criação de um sub-menu ficando o código da seguinte forma:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_admin_menus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//Adição do sub-menu Opções ao menu principal Apresentação&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;add_theme_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;manage_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;opcoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;themeslug_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//Esta função vai conter a página &amp;quot;Opções&amp;quot;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;add_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;admin_menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_admin_menus&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora, quando voltarem à &lt;em&gt;dashboard&lt;/em&gt; do WordPress, já lá deverão ter o novo menu.&lt;/p&gt;

&lt;p&gt;Se abrirem a página vão ver que ainda não existe nada nessa página. Como este tutorial está a ficar um pouco extenso, deixarei a criação de uma opção e a sua aplicação para a segunda parte deste tutorial que &lt;del&gt;deve chegar dentro de dois ou três dias&lt;/del&gt; podes encontrar &lt;a href=&#34;https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao-parte-2/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esperamos que o tutorial vos tenha sido útil.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criar identificadores únicos em PHP</title>
      <link>https://henriquedias.com/tutorials/criar-identificadores-unicos-php</link>
      <pubDate>Wed, 30 Jul 2014 08:34:52 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/criar-identificadores-unicos-php</guid>
      <description>&lt;p&gt;Como deve saber, PHP é umas das linguagens de servidor mais utilizadas no mundo. Hoje vou mostrar-vos uma fantástica forma de gerar &lt;strong&gt;IDs (identificadores) únicos&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O método para o fazer chama-se &lt;strong&gt;uniqid()&lt;/strong&gt; e deve ser utilizado da seguinte forma.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;string uniqid ([ string $prefix = &amp;quot;&amp;quot; [, bool $more_entropy = false ]] )&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esta função cria um ID baseado nas horas atuais em microssegundos logo não são criados números aleatórios. Se chamar esta função sem quaisquer parâmetros, o PHP irá fornecer-lhe um conjunto de 13 caracteres. Exemplo:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid() . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E eu recebi o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;540f25baa463c&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4644&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4647&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4649&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa464c&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa464f&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4652&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4654&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4657&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4659&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode ver, existe um padrão que é seguido em cada entrada. Agora, vamos tornar isto mais interessante com prefixos. O primeiro parâmetro pode aer utilizado para prefixos. Exemplo:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid(&amp;#39;id.&amp;#39;) . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;// =&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab54&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab61&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab65&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab6a&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab6e&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab73&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab78&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab7d&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab80&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab85&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Antes de continuarmos para o segundo parâmetro vamos tornar isto mais divertido utilizando a função &lt;code&gt;rand()&lt;/code&gt; para os prefixos como seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid(rand()) . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;// =&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;1847953d8a7a793dad&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1593253d8a7a793dc6&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;3066153d8a7a793dd3&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1359453d8a7a793de0&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1441153d8a7a793ded&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;55253d8a7a793df9&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1926553d8a7a793e05&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;227853d8a7a793e11&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;362353d8a7a793e1d&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;635653d8a7a793e2a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pode aprender mais sobre esta função aqui &lt;a href=&#34;http://pt2.php.net/manual/en/function.rand.php&#34;&gt;aqui&lt;/a&gt;. Podemos também ativar a entropia utilizando o segundo parâmetro.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid(NULL,  true) . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;// =&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;53d8a804e20009.43950771&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e201f6.55814947&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e20303.56124572&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e203f8.58127959&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e204e1.29334755&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e205d8.15855084&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e206c1.12343150&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e207b1.83476235&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e208b5.92283530&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e209d6.58175306&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Com entropia activada, o tamanho do conjunto passa de 13 a 23 caracteres. Podemos ainda utilizar a entropia com o comando &lt;code&gt;rand()&lt;/code&gt; ao mesmo tempo:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;654753d8a87287e1c6.37774954&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;2401653d8a87287e2e3.55006223&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;45753d8a87287e363.99897593&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1249453d8a87287e3d4.10326514&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1534353d8a87287e451.40348788&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;178853d8a87287e4c0.49212408&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;2906153d8a87287e547.79619666&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;303453d8a87287e5c2.76725867&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1025153d8a87287e649.36971601&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;586453d8a87287e6c7.26848089&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Isto é bom para quando se tem mais de um servidor a correr a mesma aplicação. Assim evitam-se possíveis erros causados por IDs iguais. Como assim? Se tiverem dois ou mais servidores a correr a mesma aplicação, pode acontecer algum correr o comando no mesmo micro segundo.&lt;/p&gt;

&lt;p&gt;É isto. :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chamadas Ajax com jQuery e PHP</title>
      <link>https://henriquedias.com/tutorials/chamadas-ajax-com-jquery-e-php</link>
      <pubDate>Sun, 20 Jul 2014 10:41:11 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/chamadas-ajax-com-jquery-e-php</guid>
      <description>&lt;p&gt;A biblioteca &lt;a href=&#34;http://jquery.com/&#34;&gt;jQuery&lt;/a&gt; é das mais conhecidas e utilizadas em JavaScript. Com esta biblioteca podemos proceder a chamadas &lt;strong&gt;ajax&lt;/strong&gt; muito facilmente através de poucas linhas de código.&lt;/p&gt;

&lt;p&gt;Vamos aprender a efetuar pedidos POST e GET com Ajax, obtendo os dados do lado do servidor utilizando PHP e responder a essa mesma chamada.&lt;/p&gt;

&lt;p&gt;Iremos analisar um exemplo prático: um  formulário de registo ou inscrição  utilizando as tags &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; do HTML, Ajax para enviar os pedidos para o servidor e  PHP processar os dados e enviar a resposta novamente para o lado do cliente onde será mostrada uma mensagem de sucesso ou erro conforme o sucedido.&lt;/p&gt;

&lt;p&gt;Como vamos utilizar o método Ajax do jQuery, temos que importar, em primeiro lugar, a biblioteca jQuery. Na secção &lt;head&gt;  do vosso ficheiro onde vai estar o registo - vou chamar-lhe &lt;code&gt;index.html&lt;/code&gt; - devem colocar o seguinte código:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esse pequeno trecho importa a versão 2.1.1 do jQuery e está armazenada nos servidores da Google e o seu uso é livre e qualquer um pode utilizar. Para criar o formulário de registo, vamos utilizar as tags &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; do HTML, criando assim, algo semelhante ao seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Formulário de Registo&lt;span class=&#34;nt&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;registo&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;javascript:enviarRegisto();&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&#34;nt&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;nome&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;nome&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;placeholder=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Nome&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
	&lt;span class=&#34;nt&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;placeholder=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
	&lt;span class=&#34;nt&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;placeholder=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Email&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
	&lt;span class=&#34;nt&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Submeter&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O título não é necessário para o  pleno funcionamento do formulário. Como podem ver, todos os &lt;inputs&gt;  estão identificados com um id. No final encontra-se um botão para submeter o formulário. Este botão direciona para a ação do formulário que, neste caso, é javascript:enviarRegisto(); .&lt;/p&gt;

&lt;p&gt;O método (method) não é necessário visto que este vai ser definido diretamente através do pedido em Ajax. Agora vamos à parte do servidor - registar o utilizador. Vamos criar um ficheiro com o nome &lt;code&gt;processar.php&lt;/code&gt; o mesmo local onde temos o nosso &lt;code&gt;index.html&lt;/code&gt;. Neste ficheiro teremos o código seguinte ou semelhante:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Receber os dados do formulário através&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * de informações enviadas pelo ajax com&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * o método POST.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$nome&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Criação de uma variável que mais tarde irá&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * guardar o resultado da operação: se foi concluída&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * com sucesso ou não.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$resultado&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Ligação à base de dados utilizando PDO. Eu, por exemplo,&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * utilizei SQLite mas  pode ser utilizado qualquer outro tipo&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * de bases de dado.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;PDO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sqlite:db.sqlite&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;


&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Query/Chamada para inserir os dados que obtemos via POST&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * na base de dados.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;INSERT INTO utilizadores VALUES (&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$nome&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;#39;, &amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;#39;, &amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;	 * Se a chamada for concluída com  sucesso,&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;	 * será atribuído o valor &amp;quot;true&amp;quot; ao elemento&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;	 * status da array $resultado.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;

	&lt;span class=&#34;nv&#34;&gt;$resultado&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;//Caso contrário será falso.&lt;/span&gt;

	&lt;span class=&#34;nv&#34;&gt;$resultado&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Informa que o arquivo vai ser do tipo Json.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Assim, o Ajax vai conseguir receber a resposta&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * corretamente.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-type: application/json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Envio da array $resultado novamente para o lado do cliente&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * em  formato json.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;json_encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$resultado&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Podes ler mais sobre o formato &lt;strong&gt;json&lt;/strong&gt; &lt;a href=&#34;http://json.org/&#34;&gt;aqui&lt;/a&gt;. Antes de continuarmos, vamos estabelecer as diferenças entre os métodos POST e GET. Talvez a maior diferença entre estes dois métodos seja a visibilidade. O método &lt;strong&gt;GET&lt;/strong&gt; leva a informação &amp;ldquo;agarrada&amp;rdquo; ao URL e qualquer pessoa pode ver. Os URLs com informações anexadas são do seguinte formato:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://example.com?infoNome=info&amp;amp;infoNome2=info2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Por outro lado, o método &lt;strong&gt;POST &lt;/strong&gt;leva a informação encapsulada no corpo do pedido e não pode visualizada. Uma desvantagem deste método é ser mais lento visto que é encapsulado ao contrário do GET, que é mais simples. Como os pedidos GET são feitos através do URL, existe uma limitação no comprimento da mensagem enviada sendo que não pode ter mais de 255 caracteres dependendo do browser.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;tipo de dados&lt;/strong&gt; é outra grande diferença: enquanto que o método GET só pode enviar texto, o método POST pode enviar qualquer tipo de informação. Podes saber mais sobre estes dois métodos &lt;a href=&#34;http://www.w3schools.com/tags/ref_httpmethods.asp&#34;&gt;aqui&lt;/a&gt;. Agora que já temos o formulário de registo e o servidor preparado, só falta fazer a ligação entre o cliente e o servidor utilizando Ajax.&lt;/p&gt;

&lt;p&gt;Em primeiro lugar, criamos um novo ficheiro chamado, por exemplo, &lt;code&gt;script.js&lt;/code&gt; e chamomo-lo logo a seguir ao jQuery no nosso &lt;code&gt;index.html&lt;/code&gt; com um código semelhante ao seguinte:Agora, dentro do ficheiro de javascript, vamos ter que criar a função que anteriormente colocámos na ação do formulário, a função enviarRegisto().&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;enviarRegisto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * Obtenção dos dados do formulário e colocação dos mesmos&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * no formato nomeDaInfo=Info para enviar por POST.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * Utiliza-se a função val() para obter os valores&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * dos inputs com os id&amp;#39;s em questão.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;


    &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * Criação da variável data que vai conter toda a informação&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * a enviar para o servidor.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#registo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * Podemos também definir a variável data da seguinte forma:&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * nome = &amp;#39;nome=&amp;#39; + $(&amp;#39;#nome&amp;#39;).val();&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * password = &amp;#39;password=&amp;#39; + $(&amp;#39;#password&amp;#39;).val();&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * email = &amp;#39;email=&amp;#39; + $(&amp;#39;#email&amp;#39;).val();&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * data = nome + &amp;#39;&amp;amp;&amp;#39; + password + &amp;#39;&amp;amp;&amp;#39; + email;&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//Começa aqui o pedido ajax&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;//Tipo do pedido que, neste caso, é POST&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * URL do ficheiro que para o qual iremos enviar os dados.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * Pode ser um url absoluto ou relativo.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         */&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;processar.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;//Que dados vamos enviar? A variável &amp;quot;data&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;//O tipo da informação da resposta&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;dataType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * Quando a chamada Ajax é terminada com sucesso,&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * o javascript confirma o status da operação&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * com a variável que enviámos no formato json.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         */&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;//Se for positivo, mostra ao utilizador uma janela de sucesso.&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Registo bem Sucedido!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;//Caso contrário dizemos que aconteceu algum erro.&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Uups! Ocorreu algum erro!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;}).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xhr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * Caso haja algum erro na chamada Ajax,&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * o utilizador é alertado e serão enviados detalhes&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * para a consola javascript que pode ser visualizada&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         * através das ferramentas de desenvolvedor do browser.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;         */&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Uups! Ocorreu algum erro!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xhr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Detalhes: &amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;nErro:&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Relembro que todo o código neste artigo é para fins demonstrativos e que para fins profissionais devem ser aplicadas medidas de segurança de forma a que terceiros não consigam obter os dados que estão a ser transmitidos.&lt;/p&gt;

&lt;p&gt;Depois de guardar o ficheiro, podemos abrir o formulário, preenchê-lo, enviá-lo e ver se tudo foi bem sucedido.&lt;/p&gt;

&lt;p&gt;Qualquer dúvida que tenham procurado e não tenham conseguido resolver, não hesitem em perguntar mas nunca se esqueçam: antes de &lt;strong&gt;perguntar&lt;/strong&gt;, devem &lt;strong&gt;procurar&lt;/strong&gt; e &lt;strong&gt;tentar &lt;/strong&gt;porque só assim é que vão realmente compreender a 100% :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://henriquedias.com/downloads/post-get-ajax-resposta-php.zip&#34;&gt;Download&lt;/a&gt; | &lt;a href=&#34;https://henriquedias.com/downloads/post-get-ajax-resposta-php-comentado.zip&#34;&gt;Download (Comentado)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
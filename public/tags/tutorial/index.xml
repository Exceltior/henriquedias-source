<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Henrique Dias</title>
    <link>https://henriquedias.com/tags/tutorial/</link>
    <description>Recent content in Tutorial on Henrique Dias</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jun 2015 11:27:37 +0000</lastBuildDate>
    <atom:link href="https://henriquedias.com/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>WordPress: adicionar menus de administração [Parte 2]</title>
      <link>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao-parte-2</link>
      <pubDate>Wed, 10 Jun 2015 11:27:37 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao-parte-2</guid>
      <description>&lt;p&gt;O &lt;strong&gt;WordPress&lt;/strong&gt; é, como vocês sabem, um dos mais populares CMS do mundo. Isto, se não o for. Um dos nossos primeiros artigos foi referente ao WordPress e ensinámos a &lt;a href=&#34;https://henriquedias.com/tutorials/remover-hash-dos-links-continuar-a-ler/&#34;&gt;remover a hash dos links &amp;ldquo;Ler mais&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hoje vamos dar continuação ao tutorial sobre como &lt;a href=&#34;https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao/&#34;&gt;adicionar menus de administração&lt;/a&gt; a temas e plugins do WordPress.&lt;/p&gt;

&lt;p&gt;Na primeira parte, criámos duas funções e adicionámos uma opção ao menu de administração do WordPress sendo que ficámos com o seguinte código:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_admin_menus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//Adição do sub-menu Opções ao menu principal Apresentação&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;add_theme_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;manage_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;opcoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;themeslug_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//Esta função vai conter a página &amp;quot;Opções&amp;quot;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;add_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;admin_menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_admin_menus&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hoje vamos dedicar-nos, principalmente, à segunda função (&lt;code&gt;themeslug_options()&lt;/code&gt;) e à utilização de uma variável definida nas opções.&lt;/p&gt;

&lt;p&gt;Resumindo, hoje vamos fazer o seguinte:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Criar uma opção das definições para adicionar o &lt;em&gt;link&lt;/em&gt; do site para a sua página do Facebook.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Se o &lt;em&gt;link&lt;/em&gt; estiver definido, vai aparecer um ícone no tema para ir para a página, caso não esteja, o ícone não aparecerá.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pode parecer complicado, mas vai ver que é simples. Vamos começar por substituir o comentário que está dentro da função themeslug_options  pelo seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//...&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Este loop if verifica se o utilizador tem permissões suficientes&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * para aceder a esta página. Se não tiver, a função termina aqui&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * utilizando a função wp_die() e será apresentada a mensagem que está&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * dentro de parêntesis ao utilizador.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;current_user_can&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;manage_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;wp_die&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Não tem permissões suficientes para aceder a esta página!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;&amp;lt;!--  Aqui começa a nossa página, inserindo o título. --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;h2&amp;gt;Opções&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Ao voltarmos ao PHP, declaramos uma variável chamada Facebook que vai&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * conter a opção que irá ser definida.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Esta variável vai buscar a opção que está guardada. (Ver &amp;#39;if&amp;#39; seguinte)&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get_option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_facebook&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Neste loop if, verificamos se o formulário abaixo foi submetido. Isto é feito&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * verificando se um &amp;quot;input&amp;quot; abaixo foi definido. Este estará oculto de forma a&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * que não possa ser alterado.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Se estiver definida, a variável $facebook será &amp;quot;reescrita&amp;quot; colocando desta&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * vez o valor obtido através do método POST do formulário a seguir.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;update_settings&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;esc_attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;facebook&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * Aqui atualizamos a opção &amp;quot;themeslug_facebook&amp;quot; com o valor da variável&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     * $facebook.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;update_option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_facebook&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//Apresentação de uma mensagem de sucesso&lt;/span&gt;
    &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt; &amp;lt;div id=&amp;quot;message&amp;quot; class=&amp;quot;updated below-h2&amp;quot;&amp;gt;&amp;lt;p&amp;gt;Definições guardadas&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/* Formulário que utilizaremos para submeter as definições.&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * Este formulário utiliza classes CSS próprias do WordPress,&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; * como &amp;quot;top&amp;quot; e outras.  &lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;form method=&amp;quot;POST&amp;quot; action=&amp;quot;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;table class=&amp;quot;form-table&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;lt;tr valign=&amp;quot;top&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;th scope=&amp;quot;row&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &amp;lt;label for=&amp;quot;facebook&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    Facebook:&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;/th&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;td&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* Este input será onde colocaremos o link. O seu valor será igual à variável $facebook&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;                    anteriormente definida. Assim, caso essa opção não tenha sido definida, será apresentado&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;                    um campo vazio.&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;                    Caso já tenha sido definida, o campo irá conter o valor atual tornando-se mais fácil de editar. */&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;facebook&amp;quot; size=&amp;quot;100%&amp;quot; value=&amp;quot;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$facebook&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;/table&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* Criação de um input oculto para informar o PHP se estamos a submeter o formulário ou não. */&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;update_settings&amp;quot; value=&amp;quot;Y&amp;quot; /&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* Botão de submissão do formulário. */&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;submit&amp;quot; value=&amp;quot;Guardar alterações&amp;quot; class=&amp;quot;button button-primary&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;/form&amp;gt;    &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O código acima está integralmente comentado. Se lerem os comentários de cima para baixo, não conhecendo o resto do código, é normal que sintam alguma confusão.&lt;/p&gt;

&lt;p&gt;Porém, essa ordem é necessária de forma a que a variável &lt;code&gt;$facebook&lt;/code&gt; fique definida e apareça no input  do formulário. Por isso, se tiverem alguma dúvida, não hesitem em perguntar.&lt;/p&gt;

&lt;p&gt;Agora, quando acederem às definições do vosso tema (neste caso), irão ter uma página de opções.&lt;/p&gt;

&lt;p&gt;Podem agora definir o &lt;em&gt;link&lt;/em&gt; para a página do Facebook que desejam utilizar. Depois de guardarem as alterações ir-vos-à ser apresentada uma mensagem.&lt;/p&gt;

&lt;p&gt;Para aplicar a variável no tema é muito simples. Como viram acima, utilizámos a função get_option  para obter a opção que foi gravada e será assim que a iremos obter e utilizar no tema.&lt;/p&gt;

&lt;p&gt;O código acima verifica se a opção &lt;code&gt;themeslug_facebook&lt;/code&gt; foi definida e se sim, cria um link em HTML que direcionará para a página que foi definida nas opções do tema.&lt;/p&gt;

&lt;p&gt;É simples utilizar as opções nos temas do WordPress. Não se esqueçam, se não compreenderem qualquer coisa, podem sempre utilizar os comentários ou utilizar a &lt;a href=&#34;https://henriquedias.com/contact&#34;&gt;página de contacto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Espero que tenham gostado deste pequeno tutorial :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to create a Node.js command-line application</title>
      <link>https://henriquedias.com/tutorials/how-to-create-a-node-js-command-line-application</link>
      <pubDate>Tue, 31 Mar 2015 18:55:49 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/how-to-create-a-node-js-command-line-application</guid>
      <description>

&lt;p&gt;Nowadays, &lt;strong&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;node.js&lt;/a&gt;&lt;/strong&gt; is one of the technologies which is always talked about when the subject is related with real-time applications or even &lt;a href=&#34;http://en.wikipedia.org/wiki/Command-line_interface&#34;&gt;CLI &lt;/a&gt;(Command-line interface) apps.&lt;/p&gt;

&lt;p&gt;Node.js is a cross-platform platform (which is very redundant) built on Chrome&amp;rsquo;s JavaScript runtime. They say that with Node.js we can create network applications, but we can do a lot more.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://henriquedias.com/tutorials/como-utilizar-o-bower-um-gestor-de-pacotes-web/&#34;&gt;Bower&lt;/a&gt;, for example, is a very useful tool built in the top of node.js. We can take advantage of the fact of node.js be cross-platform to create CLI apps which can serve  everyone.&lt;/p&gt;

&lt;p&gt;CLI application can be very useful to task automation, to do repetitive tasks we do everyday, etc. Bower, that I&amp;rsquo;ve already mentioned, is useful because it installs and updates all of the front-end dependencies automatically.&lt;/p&gt;

&lt;p&gt;So, the purpose of this article is helping you creating a command-line interface application with node.js.&lt;/p&gt;

&lt;h2 id=&#34;is-everything-ok:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Is everything ok?&lt;/h2&gt;

&lt;p&gt;To begin, you should have both node.js and npm installed on your computer. The current versions of node.js already have npm build-in. Npm is the official node package manager.&lt;/p&gt;

&lt;p&gt;You can download node.js from this website. After installed, you should check if the node.js and npm are correctly installed on your computer. To do that, you can, for example, run the following commands to see the current installed version of each thing:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; node --version
&amp;gt; npm --version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If both commands return something like v0.12.0 and 2.5.1, everything is ready to be used.&lt;/p&gt;

&lt;h2 id=&#34;initialize-the-package:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Initialize the package&lt;/h2&gt;

&lt;p&gt;Now, let&amp;rsquo;s create our first node.js command-line application with node.js. First of all, go the directory where you want to save the code of the application. Run the following commands:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; mkdir mycliapp
&amp;gt; &lt;span class=&#34;nb&#34;&gt;cd &lt;/span&gt;mycliapp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course you can replace mycliapp  with whatever you want. Now, we have to create a &lt;code&gt;package.json&lt;/code&gt; file which contains the &lt;a href=&#34;http://en.wikipedia.org/wiki/Metadata&#34;&gt;meta information&lt;/a&gt; of the application. It can be done automatically:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; npm init
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After running the previous command, you should put the information you want for the package. If the information between parentheses is correct, you just have to press enter.&lt;/p&gt;

&lt;p&gt;Now, you should have something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;mycliapp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;This is my first cli application.&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Henrique Dias &amp;lt;hacdias@gmail.com&amp;gt; (http://henriquedias.com)&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think almost all of the content of that file is self-explanatory. If you have some doubt, search in &lt;a href=&#34;https://docs.npmjs.com/files/package.json&#34;&gt;this page&lt;/a&gt;. Right now, we are going to ignore the &lt;code&gt;index.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now, and because it is a command-line application, we should add two other informations to the &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;preferGlobal&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;bin&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;mycliapp&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;./bin/mycliapp&amp;quot;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first one (preferGlobal ) that advises the user that this app should be installed globally, it means, available in the all system.&lt;/p&gt;

&lt;p&gt;The second one, bin , is used to tell the commands which will be available to use. In this example we have the command &lt;code&gt;mycliapp&lt;/code&gt; associated with the file located at &lt;code&gt;bin/mycliapp.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;output-some-data:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Output some data&lt;/h2&gt;

&lt;p&gt;Then we are going to create the &lt;code&gt;bin/mycliapp.js&lt;/code&gt; file which will have all of the application logic (in this case, it can be divided into various files). Create it, and simply add the following line of code to print an Hello World:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello, World!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, link your app with npm to run it locally. Do it using this command:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; npm link
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that, you should be able to run the command &lt;code&gt;mycliapp&lt;/code&gt; in the console. Run it and you should receive the message &amp;ldquo;Hello, world!&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;get-data-from-user:2cf2d4fc691211667baf098cd3988ead&#34;&gt;Get data from user&lt;/h2&gt;

&lt;p&gt;Now we already know how to output some information (simply using &lt;code&gt;console.log()&lt;/code&gt;). So now we are going to learn how to get data from the user.&lt;/p&gt;

&lt;p&gt;There are some packages which help us to make question to the user, but we will use the built-in module readline which is very simple to use.&lt;/p&gt;

&lt;p&gt;Firstly, we need to include that module. To do that, we may do something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;readline&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we have to create the interface to make the question, it means that we are going to set the input and output of data.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createInterface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stdout&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;process&lt;/code&gt; (read more &lt;a href=&#34;https://nodejs.org/api/process.html#process_process&#34;&gt;here&lt;/a&gt;) is a global object variable which is an instance of &lt;a href=&#34;https://nodejs.org/api/process.html#process_process&#34;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So now that we already have the input and output setted up, we can make a question to the user and then receive the answer. We should use this syntax:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To ask the user his name and then print it, you may do something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;What is your name? &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// close the instance of reading interface&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is very simples as you can see. Never forget to close the instance of the reading interface. After that you can do whatever you want with the answer of the user.&lt;/p&gt;

&lt;p&gt;You can get more information about this module &lt;a href=&#34;https://nodejs.org/api/readline.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;how-to-read-arguments:2cf2d4fc691211667baf098cd3988ead&#34;&gt;How to read arguments&lt;/h2&gt;

&lt;p&gt;There are a lot of ways to read arguments. There&amp;rsquo;s some third-party packages which helps the user doing it, like &lt;a href=&#34;https://www.npmjs.com/package/commander&#34;&gt;&lt;code&gt;commander&lt;/code&gt;&lt;/a&gt;, but we are going to do it manually to see how does it work.&lt;/p&gt;

&lt;p&gt;Remember the process  object? It also contains the arguments. Let&amp;rsquo;s experiment. Write the following code of line in bin/mycliapp. You might remove all of the previous code or comment it.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, run the application, putting some arguments, options, commands after the app name.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&amp;gt; mycliapp option1 henrique
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;,
 &lt;span class=&#34;s1&#34;&gt;&amp;#39;C:\\Users\\Henrique\\AppData\\Roaming\\npm\\node_modules\\mycliapp\\bin\\mycliapp&amp;#39;&lt;/span&gt;,
  &lt;span class=&#34;s1&#34;&gt;&amp;#39;option1&amp;#39;&lt;/span&gt;,
  &lt;span class=&#34;s1&#34;&gt;&amp;#39;henrique&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, the first element of our arguments array is the environment, in this case, node. The second one is the path of the file which is running. The following elements are the other arguments.&lt;/p&gt;

&lt;p&gt;If you just want the arguments put by the user you may do something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// remove 2 elements after the position 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you print the content of args  variable you will see that it only contains the arguments that the user wrote.&lt;/p&gt;

&lt;p&gt;Now, if you want, for example, to print &amp;ldquo;Hello&amp;rdquo; when the user uses the argument &lt;code&gt;sayhello&lt;/code&gt; , you can do this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sayhello&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Simple, but effective.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now, go on and create your CLI application with Node.js :)&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this tutorial of how to create node.js command-line applications. If you have some doubts, you may use the comments or the &lt;a href=&#34;https://henriquedias.com/contact/&#34;&gt;contact page&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MVC na linguagem PHP - IV</title>
      <link>https://henriquedias.com/tutorials/mvc-linguagem-php-iv</link>
      <pubDate>Sun, 21 Dec 2014 10:00:04 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/mvc-linguagem-php-iv</guid>
      <description>

&lt;p&gt;A pedido de um leitor, decidimos escrever um artigo em que exemplificamos este maravilhoso (ou não) modelo MVC utilizando a linguagem de programação PHP.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php/&#34;&gt;primeira&lt;/a&gt;, &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php-ii/&#34;&gt;segunda&lt;/a&gt; e &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php-iv/&#34;&gt;terceiras&lt;/a&gt; partes já foram publicadas. Hoje, trago a quarta e última parte desta mini-série de artigos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/mvcp4.jpg&#34; alt=&#34;Modelo MVC – Uma exemplificação com PHP #4&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O que vamos fazer hoje é, simplesmente, criar uma página dinâmica que liste diversos &lt;em&gt;posts&lt;/em&gt; que estão na base de dados da aplicação.&lt;/p&gt;

&lt;p&gt;Se bem se lembra, a ligação à base de dados é configurada no ficheiro &lt;code&gt;config.php&lt;/code&gt;, por isso assegure-se que a sua conexão está bem configurada.&lt;/p&gt;

&lt;p&gt;Aqui, tenho uma base de dados chamada &lt;em&gt;mvc&lt;/em&gt; com uma tabela chamada &lt;em&gt;posts&lt;/em&gt;, e esta tabela tem três colunas: a &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; e &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;De momento tenho duas linhas inseridas nessa mesma tabela, ou seja, de momento tenho exatamente o seguinte:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;title&lt;/th&gt;
&lt;th&gt;content&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Lorem Ipsum&lt;/td&gt;
&lt;td&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus id velit non tellus feugiat feugiat vitae quis nibh. Pellentesque maximus lectus ut enim tincidunt, a rutrum dui elementum. Vestibulum elit sapien, malesuada sit amet est lacinia, aliquet laoreet arcu. Duis quis velit hendrerit, pretium nibh ut, faucibus odio. Fusce hendrerit nunc urna, vitae varius augue fringilla in. Nunc a ex eget lectus dictum mollis. Proin quis nisl consectetur metus bibendum ultricies eu non orci. Quisque nec efficitur quam. Suspendisse lorem nulla, sollicitudin ac sagittis id, eleifend eget eros. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras neque leo, consectetur nec sem quis, imperdiet viverra quam. Pellentesque ultricies felis a molestie egestas. Aliquam malesuada eget justo condimentum venenatis. Duis mattis ut nisi in suscipit. Phasellus scelerisque, arcu ut sollicitudin sagittis, ex ante posuere neque, et dapibus ex lectus quis libero.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Usto Risus&lt;/td&gt;
&lt;td&gt;Usto risus, cursus non iaculis a, semper vitae dolor. Nunc pellentesque tempor pretium. Sed sem risus, accumsan ut urna in, sollicitudin sagittis nisi. Integer ullamcorper orci id nisl iaculis, ac congue purus posuere. Vivamus pharetra nibh in arcu vulputate, in feugiat dolor feugiat. Aliquam erat volutpat. Maecenas sodales magna urna, quis faucibus arcu mattis sit amet. Ali. Fusce hendrerit nunc urna, vitae varius augue fringilla in. Nunc a ex eget lectus dictum mollis. Proin quis nisl consectetur metus bibendum ultricies eu non orci. Quisque nec efficitur quam. Suspendisse lorem nulla, sollicitudin ac sagittis id, eleifend eget eros. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras neque leo, consectetur nec sem quis, imperdiet viverra quam. Pellentesque ultricies felis a molestie egestas. Aliquam malesuada eget justo condimentum venenatis. Duis mattis ut nisi in suscipit. Phasellus scelerisque, arcu ut sollicitudin sagittis, ex ante posuere neque, et dapibus ex lectus quis libero.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;controlador:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Controlador&lt;/h2&gt;

&lt;p&gt;Como sempre, iremos começar com um simples controlador. De momento, o controlador deverá ser simples e ter apenas o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Posts&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/* REQUERER POSTS */&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Posts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;posts/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;De momento, apenas declaramos o construtor e também a função index  que será aquela que vai  ser acedida ao acedermos a &lt;code&gt;URL/posts&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;modelo:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Modelo&lt;/h2&gt;

&lt;p&gt;Vamos então virar a nossa cara para os modelos. O modelo correspondente a este controlador deverá estar localizado em &lt;code&gt;app_core/models/posts.php&lt;/code&gt; e deverá conter um código semelhante ao seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Posts&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Model&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getPosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;SELECT * FROM posts&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Onde utilizamos o construtor para criar uma ligação à base de dados e criamos a função &lt;code&gt;getPosts&lt;/code&gt; que irá buscar todos as as colunas da tabela &lt;em&gt;posts&lt;/em&gt; da base de dados a que está ligada a nossa aplicação.&lt;/p&gt;

&lt;p&gt;Como pode ver, este é um modelo bastante simples cuja única função é buscar os ficheiros à base de dados. De momento não há mais nenhuma alteração.&lt;/p&gt;

&lt;h2 id=&#34;voltando-ao-controlador:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Voltando ao controlador&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Agora devemos voltar ao controlador e substituir o comentário que lá deixámos pelas seguintes duas linhas:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;$data = $this-&amp;gt;model-&amp;gt;getPosts();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$this-&amp;gt;view-&amp;gt;setData($data);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A função destas duas linhas é bastante simples: primeiro, declaramos uma variável que será igual ao retorno da função que criámos anteriormente para selecionar os artigos.&lt;/p&gt;

&lt;p&gt;De seguida, &amp;ldquo;injetamos&amp;rdquo; o conteúdo desta variável na &lt;em&gt;view&lt;/em&gt; deste controlador utilizando a função &lt;code&gt;setData&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;que-bela-vista:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Que bela vista!&lt;/h2&gt;

&lt;p&gt;Agora só falta a parte que irá mostrar os itens na página: a &lt;em&gt;view&lt;/em&gt;. Esta &lt;em&gt;view&lt;/em&gt; deverá ser declarada no diretório &lt;code&gt;app_core/views/posts/index.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Relembro que a localização do ficheiro é definida quando utilizamos a função render . Então, o conteúdo que coloquei nesta página é o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;h1&amp;gt;Posts&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_data&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;h2&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;endforeach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode ver, aqui percorremos todos os itens do array &lt;code&gt;$_data&lt;/code&gt; que faz parte da vista e, de seguida, imprimimos o título e o conteúdo de cada &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;ou-seja:30a6231206f46a4d16a2087c59187fd6&#34;&gt;Ou seja,&lt;/h2&gt;

&lt;p&gt;Ou seja, é muito simples. Muitas coisas podem ser agora feitas neste modelo, pois a parte mais difícil já foi feita: o &lt;em&gt;core&lt;/em&gt;, o &lt;em&gt;kernel&lt;/em&gt;, o núcleo da aplicação.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tem alguma sugestão, ideia ou modificação? Sinta-se livre para contribuir para esta simples, pequena e &lt;em&gt;homemade framework&lt;/em&gt; no &lt;a href=&#34;https://github.com/hacdias/InMVC&#34;&gt;GitHub&lt;/a&gt; :)&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MVC na linguagem PHP - III</title>
      <link>https://henriquedias.com/tutorials/mvc-linguagem-php-iii</link>
      <pubDate>Sat, 20 Dec 2014 09:00:23 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/mvc-linguagem-php-iii</guid>
      <description>

&lt;p&gt;A pedido de um leitor, decidimos escrever um artigo em que exemplificamos este maravilhoso (ou não) modelo MVC utilizando a linguagem de programação PHP.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php/&#34;&gt;primeira&lt;/a&gt; e &lt;a href=&#34;https://henriquedias.com/tutorials/mvc-linguagem-php-ii/&#34;&gt;segunda&lt;/a&gt; partes já foram publicadas e hoje é a vez da terceira onde tudo começa a tornar-se mais facilmente compreendido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/mvcphp.jpg&#34; alt=&#34;Modelo MVC – Uma exemplificação com PHP #3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Em primeiro lugar, quero referir algumas modificações que efetuei em alguns dos ficheiros que já trabalhámos.&lt;/p&gt;

&lt;p&gt;Adicionei a constante &lt;code&gt;SITE_TITLE&lt;/code&gt; ao ficheiro &lt;code&gt;config.php&lt;/code&gt;, ficando a primeira secção deste ficheiro da seguinte forma:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//...&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//1. Base Constants&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ROOT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;URL&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://localhost/mvc/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SITE_TITLE&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Simple MVC Structure Model&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Na classe &lt;code&gt;View&lt;/code&gt; foi adicionada uma função que permitirá ao utilizador definir o título (aquele que aparece na parte superior do &lt;em&gt;browser&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;public function setTitle($title)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $this-&amp;gt;_pageInfo[&amp;#39;title&amp;#39;] = $title . &amp;#39; | &amp;#39; . SITE_TITLE;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;public-html:ae98e7c4c7a05fc53108b63636849ebe&#34;&gt;&lt;code&gt;public_html&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Hoje vamos continuar a nossa jornada começando na pasta pública, ou seja, na pasta &lt;code&gt;public_html&lt;/code&gt;. Vamos começar com o nosso maravilhoso &lt;code&gt;.htaccess&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nb&#34;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;404&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/404&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/500&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;mod_rewrite.c&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nb&#34;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;On&lt;/span&gt;

    &lt;span class=&#34;nb&#34;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-d
    &lt;span class=&#34;nb&#34;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-f
    &lt;span class=&#34;nb&#34;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-l

    &lt;span class=&#34;nb&#34;&gt;RewriteRule&lt;/span&gt; ^(.+)$ index.php?url=$1 [QSA,L]

&lt;span class=&#34;nt&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode ver, todos os pedidos serão direcionados para o ficheiro &lt;code&gt;index.php&lt;/code&gt; com o URL completo na forma de parâmetro GET.&lt;/p&gt;

&lt;p&gt;Falando em &lt;code&gt;index.php&lt;/code&gt;, e que tal lhe darmos uma espreitadela? Este vai ser o ficheiro que vai iniciar toda a sequência de acontecimentos. Ora veja:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * Main file.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; * @package MVC PHP Bootstrap&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../app_core/config.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;autoLoad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$className&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DIR_LIBS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$className&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;spl_autoload_register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;autoLoad&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$bootstrap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Bootstrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$bootstrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste ficheiro, como pode ver, o ficheiro das configurações é chamado e, de seguida, é criado uma função de auto carregamento.&lt;/p&gt;

&lt;p&gt;O que faz esta função? Simplesmente tenta carregar uma classe indefinida. Como pode ver, eu não importo a classe &lt;code&gt;Bootstrap&lt;/code&gt;, mas logo de seguida uso-a.&lt;/p&gt;

&lt;p&gt;Consigo utilizá-la porque a a função de &lt;em&gt;auto load&lt;/em&gt; chama esta classe automaticamente. Mas atenção! Este código apenas nos permite carregar automaticamente classes contidas na pasta &lt;code&gt;libs&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se neste momento experimentar correr o código nesta pasta irá receber diversos erros porque ainda não foram criados nenhuns controladores. Nem mesmo o dos erros!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;header-and-footer:ae98e7c4c7a05fc53108b63636849ebe&#34;&gt;&lt;em&gt;Header and Footer&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Antes de continuarmos para a criação dos controladores, devemos criar os ficheiros do cabeçalho e do rodapé que são chamados quando executamos a função &lt;em&gt;render&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Estes dois ficheiros deverão estar localizados na diretoria &lt;code&gt;app_core/views/*.php&lt;/code&gt;, onde &lt;code&gt;*&lt;/code&gt; corresponde a &lt;em&gt;header&lt;/em&gt; e a &lt;em&gt;footer&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A minha proposta para o ficheiro do cabeçalho é a seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;en-EN&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php echo (isset($this-&amp;gt;_pageInfo[&amp;#39;title&amp;#39;])) ? $this-&amp;gt;_pageInfo[&amp;#39;title&amp;#39;] : SITE_TITLE; ?&amp;gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;viewport&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;width=device-width, initial-scale=1&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;stylesheet&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;lt;?php echo URL; ?&amp;gt;css/template.css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;text/css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;media=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;stylesheet&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;lt;?php echo URL; ?&amp;gt;css/normalize.css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;text/css&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;media=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;header&amp;#39;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;MVCPHPB&lt;span class=&#34;nt&#34;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
    | &lt;span class=&#34;nt&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;lt;?php echo URL; ?&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Home&lt;span class=&#34;nt&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    | &lt;span class=&#34;nt&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;lt;?php echo URL; ?&amp;gt;page&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Page&lt;span class=&#34;nt&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    | &lt;span class=&#34;nt&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;lt;?php echo URL; ?&amp;gt;posts&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Posts&lt;span class=&#34;nt&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;wrap&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Onde já temos o título da página que será igual ao título que é definido utilizando a função que referi no início do artigo, ou apenas o nome do site.&lt;/p&gt;

&lt;p&gt;Deixei também uma pequena introdução à estrutura HTML do site e uma pista àquilo que iremos criar: iremos criar uma página estática (&lt;em&gt;Page&lt;/em&gt;) e uma página dinâmica com alguns itens de uma base de dados (&lt;em&gt;Posts&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Estou também a utilizar o &lt;code&gt;normalize.css&lt;/code&gt; e uma folha de estilos própria com alguns ajustes de forma a distinguir melhor cada uma das partes do site. Aqui está o &lt;code&gt;template.css&lt;/code&gt; (deve ser colocado na pasta &lt;code&gt;css&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nf&#34;&gt;#header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;#wrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;#footer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;#header&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;#footer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;#fff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos agora ver o rodapé. O rodapé está localizado no ficheiro &lt;code&gt;app_core/views/footer.php&lt;/code&gt; e o conteúdo deve ser algo semelhante ao seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;footer&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;strong&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;MVCPHPB&lt;span class=&#34;nt&#34;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; Footer
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;controladores:ae98e7c4c7a05fc53108b63636849ebe&#34;&gt;Controladores&lt;/h2&gt;

&lt;p&gt;Depois de termos &amp;ldquo;montado&amp;rdquo; a estrutura, devemos passar à criação das páginas. Em primeiro lugar, vamos criar o controlador do erro.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;404&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;404&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Error 404&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Not found. There is nothing here.&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Error 500&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Internal Server Error. Probably we did something wrong.&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Os controladores devem pertencer à &lt;em&gt;namespace&lt;/em&gt; Controller e devem ter, obrigatoriamente, o seu construtor presente no formato mostrado acima.&lt;/p&gt;

&lt;p&gt;Este é um controlador que só terá o método _index _relacionado com as páginas pois não irá ser utilizado mais nenhum. Acima pode visualizar que este método irá receber um argumento que, por padrão, é &amp;lsquo;404&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;De seguida, algumas informações são atribuídas dependendo do erro em questão. Depois o título da página é definido e, mais tarde, os dados são enviados para a &lt;em&gt;view&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Falando em &lt;em&gt;view&lt;/em&gt;, esta é renderizada logo de seguida. A _view _que colocámos é &lt;code&gt;error/index&lt;/code&gt;, então o ficheiro PHP deverá encontrar-se em &lt;code&gt;app_core/views/error/index.php&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se experimentar correr o código neste momento, deverá receber um erro por não encontrar a _View _da página de erro.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos então visualizar a &lt;em&gt;view&lt;/em&gt; que corresponde à página de erro:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;    &amp;lt;h1&amp;gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    &amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É simples. Serve apenas para mostrar que ocorreu um erro. Mas não podemos continuar assim pois ao abrirmos a página inicial estamos apenas a ver um erro.&lt;/p&gt;

&lt;p&gt;Vamos então criar o controlador da página inicial, que deve conter o seguinte código:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Index&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Controller&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Home&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;index/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E o ficheiro da sua _view _deverá ter qualquer coisa que deseje. Eu, por exemplo, coloquei:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;MVC PHP Bootstrap (MVCPHPB)&lt;span class=&#34;nt&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is the main page of this website that is a simple mvc structure model example.&lt;span class=&#34;nt&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Esta é a página principal deste site que é um exemplo de modelo de estrutura MVC simples.&lt;span class=&#34;nt&#34;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Coloque o que queira. De momento, se aceder à página inicial deverá visualizar a página inicial propriamente dita e se tentar, eventualmente, abrir qualquer outra possível página, irá ver a página de erro 404.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No próximo tutorial iremos ver a criação de uma página dinâmica com um modelo&lt;/strong&gt;. Pode, entretanto, experimentar criar mais páginas ou até mesmo criar mais métodos para sub-páginas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP - Como utilizar o Gettext para traduções [Parte 2]</title>
      <link>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes-parte-2</link>
      <pubDate>Sun, 28 Sep 2014 15:06:47 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes-parte-2</guid>
      <description>&lt;p&gt;Na &lt;a href=&#34;https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes/&#34;&gt;primeira parte&lt;/a&gt; deste artigo, ensinámos a configurar o Gettext em conjunto com o PHP de forma a que hoje possamos criar as nossas primeiras traduções.&lt;/p&gt;

&lt;p&gt;Agora é hora de criarmos as nossas primeiras traduções. Para isso, podemos instalar um programa chamado &lt;strong&gt;Poedit&lt;/strong&gt; que nos vai ajudar. Podem descarregá-lo &lt;a href=&#34;http://poedit.net/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Abra o Poedit e clique em &lt;strong&gt;Ficheiro → Novo&lt;/strong&gt; e selecione a língua &lt;strong&gt;mãe&lt;/strong&gt; do seu site. No nosso caso, é português de Portugal (pt-PT). Depois disso, guarde o ficheiro em &lt;code&gt;lang/site_multi_lingua.pot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Logo de seguida, clique em &lt;strong&gt;Extrair das fontes&lt;/strong&gt;. Agora, adicione o caminho do seu site na seção &lt;strong&gt;Caminhos&lt;/strong&gt; da aba &lt;strong&gt;Caminhos das fontes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;De seguida, dirija-se à aba &lt;strong&gt;Propriedades da tradução&lt;/strong&gt; e dê um nome ao projeto.Pode ainda escolher outras opções.&lt;/p&gt;

&lt;p&gt;Na última aba, &lt;strong&gt;Palavras-chave das fontes&lt;/strong&gt;, adicione &lt;code&gt;__&lt;/code&gt;  e &lt;code&gt;_e&lt;/code&gt;. Depois clique em &lt;strong&gt;OK&lt;/strong&gt; e espere que os ficheiros sejam analisados.&lt;/p&gt;

&lt;p&gt;Caso ocorra algum erro relacionado com caracteres não ASCII, clique em &lt;strong&gt;Catálogo → Propriedades → Codificação do código fonte&lt;/strong&gt; e selecione UTF-8. Depois clique em &lt;strong&gt;Atualizar.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agora deverá ver um ecrã semelhante ao seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/poedit00.jpg&#34; alt=&#34;Poedit&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Guarde este ficheiro e depois vá a &lt;strong&gt;Novo → Novo de ficheiro POT/PO&lt;/strong&gt;. Selecione o ficheiro base que gravou antes e escolha a nova língua.&lt;/p&gt;

&lt;p&gt;Agora basta clicar no item a traduzir e depois escrever a tradução na caixa de texto na parte de baixo do programa.&lt;/p&gt;

&lt;p&gt;Depois, grave o ficheiro em &lt;code&gt;lang/en_GB/LC_MESSAGES/site_multi_lingua.po&lt;/code&gt;. Altere &lt;code&gt;en_GB&lt;/code&gt; pela língua que criou.&lt;/p&gt;

&lt;p&gt;Agora, para testar se está tudo a funcionar, basta digital no URL &lt;code&gt;/?lang=en_GB&lt;/code&gt; ou outra que queira testar.&lt;/p&gt;

&lt;p&gt;Pode ver &lt;a href=&#34;https://github.com/hacdias/labs/tree/master/php/multi-lang&#34;&gt;neste repositório do GitHub&lt;/a&gt; todo o código que foi aqui produzido com alguns exemplos de linguagem adicionais.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Refiro ainda que o Gettext faz &lt;em&gt;caching _de todas as _strings&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>PHP - Como utilizar o Gettext para traduções [Parte 1]</title>
      <link>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes</link>
      <pubDate>Sun, 21 Sep 2014 11:07:03 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/php-como-utilizar-o-gettext-para-traducoes</guid>
      <description>

&lt;p&gt;Como prometido no &lt;a href=&#34;https://henriquedias.com/explanations/php-wordpress-comandos-printf-sprintf/&#34;&gt;último artigo&lt;/a&gt;, hoje irá começar uma pequena saga de dois ou três artigos sobre como utilizar o Gettext no PHP.&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;gettext&lt;/strong&gt; podemos ter um site disponível em diversas linguagens de forma muito fácil e sem complicações. Nesta primeira parte, irá ser abordado como &lt;strong&gt;configurar o gettext&lt;/strong&gt; e as suas &lt;strong&gt;funções&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O gettext pode ser configurado no PHP através de uma extensão nativa ou através do uso de uma biblioteca separada.Nós iremos utilizar o segundo método por ser mais simples e fácil de configurar.&lt;/p&gt;

&lt;h2 id=&#34;download-e-estruturação:f7cadadb33380485931edab1f79d8ea6&#34;&gt;Download e estruturação&lt;/h2&gt;

&lt;p&gt;Antes de mais nada, aviso que é &lt;strong&gt;necessário&lt;/strong&gt; ter a extensão &lt;em&gt;mbstring&lt;/em&gt; ativada nas definições do PHP. Em primeiro lugar, deve fazer o &lt;em&gt;download&lt;/em&gt; do &lt;strong&gt;php-gettext&lt;/strong&gt; nesta &lt;a href=&#34;https://launchpad.net/php-gettext/&#34;&gt;página&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Depois de efetuar o &lt;em&gt;download&lt;/em&gt;, irá ter que descompactar o ficheiro transferido. Após a sua descompactação irá encontrar diversos ficheiros. Apenas iremos precisar dos seguintes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gettext.inc&lt;/code&gt; → Aliases de funções para utilizar no sistema;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gettext.php&lt;/code&gt; → Funções do gettext;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;streams.php&lt;/code&gt; → Classes e métodos que permitem ler ficheiros do gettext.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora crie uma pasta cujo conteúdo seja semelhante ao seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;site-multi-lingua/
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; lib /
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; gettext.inc
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; gettext.php
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;      streams.php
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; langs/
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; config.php
  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; i18n.php
   index.php
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pode visualizar, os ficheiros do gettext foram colocados dentro de uma pasta chamada `&lt;code&gt;lib&lt;/code&gt; e ainda foram adicionados três outros ficheiros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;config.php&lt;/code&gt; → faz o carregamento das configurações;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i18n.php&lt;/code&gt; → contém a inicialização do gettext;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inicialmente tem que ser definida uma linguagem padrão. Nós iremos utilizar &amp;ldquo;pt_PT&amp;rdquo; ou seja, Português de Portugal.&lt;/p&gt;

&lt;p&gt;Para isso, edite o seu ficheiro _config.php _e coloque o seguinte:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LANG&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pt_PT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;inicialização-do-gettext:f7cadadb33380485931edab1f79d8ea6&#34;&gt;Inicialização do Gettext&lt;/h2&gt;

&lt;p&gt;Agora que já existe uma linguagem padrão definida, a inicialização do gettext deve ser feita porém, primeiro tem que memorizar os seguintes conceitos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;locale&lt;/code&gt; → uma &lt;em&gt;string&lt;/em&gt; no formato &lt;code&gt;xx_XX&lt;/code&gt; que indica a linguagem. &amp;ldquo;pt&lt;em&gt;BR&amp;rdquo; é português do Brasil, &amp;ldquo;en_US&amp;rdquo; corresponde a Inglês dos Estados Unidos. Pode ler mais sobre estes prefixos [aqui](&lt;a href=&#34;http://pt.wikipedia.org/wiki/Internacionaliza%C3%A7%C3%A3o&#34;&gt;http://pt.wikipedia.org/wiki/Internacionaliza%C3%A7%C3%A3o&lt;/a&gt;&lt;/em&gt;(software)).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;textdomain&lt;/code&gt; → quer dizer &amp;ldquo;domínio de texto&amp;rdquo; e é um local onde as traduções vão ser colocadas. No nosso caso, apenas iremos utilizar um &lt;em&gt;textdomain&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora, deve colocar no ficheiro &lt;strong&gt;i18n.php &lt;/strong&gt;o seguinte conteúdo:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;require_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;config.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;LANG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;site_multi_lingua&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$locales_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LANGUAGE=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LANG=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LC_ALL=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;putenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LC_MESSAGES=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;require_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lib/gettext.inc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;_setlocale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LC_ALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;_setlocale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LC_CTYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;_bindtextdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$locales_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;_bind_textdomain_codeset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;_textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$textdomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Poça! Tanta coisa! Mas para que serve tudo isto? Na &lt;strong&gt;linha 3&lt;/strong&gt;, o ficheiro &lt;code&gt;config.php&lt;/code&gt; é chamado pois é este que contém a constante da linguagem. Assim podemos já podemos utilizar essa constante neste ficheiro.&lt;/p&gt;

&lt;p&gt;Nas linhas seguintes (&lt;strong&gt;5 a 7&lt;/strong&gt;), a variável &lt;code&gt;$locale&lt;/code&gt; é definida, tal como o domínio de texto e o local onde irão estar os ficheiros de tradução que, neste caso, será numa pasta chamada lang .&lt;/p&gt;

&lt;p&gt;Mais à frente, nas &lt;strong&gt;linhas 8 a 9&lt;/strong&gt;, verificamos se existe uma variável chamada &lt;code&gt;lang&lt;/code&gt; a ser passada pelo URL. Se sim, reescrevemos o valor da variável &lt;code&gt;$locale&lt;/code&gt; com essa linguagem.&lt;/p&gt;

&lt;p&gt;Nas linhas seguintes, &lt;strong&gt;12 a 5&lt;/strong&gt;, as variáveis de ambiente do sistema operativo são alteradas para o locale  que está a ser utilizado.&lt;/p&gt;

&lt;p&gt;Na linha cuja posição é &lt;strong&gt;17&lt;/strong&gt;, a biblioteca php-gettext é carregada sendo logo a seguir (&lt;strong&gt;19 a 20&lt;/strong&gt;), o locale também carregado para o gettext.&lt;/p&gt;

&lt;p&gt;Seguidamente, &lt;strong&gt;nas linhas 22 a 24&lt;/strong&gt;, o textdomain é defido, tal como a codificação que será utilizada nesses ficheiros (UTF-8) e ainda dizemos onde vão estar as traduções.&lt;/p&gt;

&lt;p&gt;De seguida é criada uma função chamada &lt;code&gt;_e()&lt;/code&gt; que nos permite imprimir o resultado da função &lt;code&gt;__()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora, copiem e colem o seguinte no &lt;code&gt;index.php&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;require_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;i18n.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Olá Mundo!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Olá Mundo!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;De momento, ainda não existe nada de extraordinário a acontecer. Na próxima parte deste tutorial iremos falar em como criar as traduções!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPress: adicionar menus de administração [Parte 1]</title>
      <link>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao</link>
      <pubDate>Sat, 02 Aug 2014 11:27:37 +0000</pubDate>
      
      <guid>https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao</guid>
      <description>

&lt;p&gt;O &lt;strong&gt;WordPress&lt;/strong&gt; é, como vocês sabem, um dos mais populares CMS do mundo. Isto, se não o for. Um dos nossos primeiros artigos foi referente ao WordPress e ensinámos a &lt;a href=&#34;https://henriquedias.com/tutorials/remover-hash-dos-links-continuar-a-ler/&#34;&gt;remover a hash dos links &amp;ldquo;Ler mais&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hoje vamos dar continuação às dicas e tutoriais sobre este CMS. Se vocês utilizam o WordPress com um tema pago, já devem ter reparado que este vem com um menu de personalização próprio criado pelo(s) autor(es) do tema. Hoje vamos ensinar-vos a criar estes menus.&lt;/p&gt;

&lt;h3 id=&#34;1-criar-ficheiro-das-opções-e-chamá-lo:3fc6ecadd2dd3ef718d67d2dce26a6fd&#34;&gt;1. Criar ficheiro das opções e chamá-lo&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;O tutorial é direcionado para &lt;strong&gt;temas&lt;/strong&gt; porém a criação dos menus faz-se da mesma forma nos &lt;strong&gt;plugins&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Começaremos por criar um ficheiro chamado &lt;code&gt;admin.php&lt;/code&gt; na pasta &lt;code&gt;inc&lt;/code&gt; do vosso tema (ou plugin). Caso esta pasta não exista, podem criá-la ou colocá-lo numa outra pasta que queiram.&lt;/p&gt;

&lt;p&gt;Antes de continuarmos o desenvolvimento deste ficheiro, vamos chamar este ficheiro através do &lt;code&gt;functions.php&lt;/code&gt;. &lt;strong&gt;Neste, coloquem o seguinte código:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;//...&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;require get_template_directory() . &amp;#39;/inc/admin.php&amp;#39;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este pequeno trecho de código chama o ficheiro através do comando &lt;code&gt;require&lt;/code&gt; e da localização do mesmo. Para obtermos a localização da pasta principal do tema utilizamos a função &lt;code&gt;get_template_directory()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Depois concatenamos o caminho do tema ao resto do directório que, no nosso caso é &lt;code&gt;/inc/admin.php&lt;/code&gt; . Se colocaram noutra pasta não se esqueçam de alterar o caminho.&lt;/p&gt;

&lt;h3 id=&#34;2-hora-de-criar-as-opções:3fc6ecadd2dd3ef718d67d2dce26a6fd&#34;&gt;2. Hora de criar as opções&lt;/h3&gt;

&lt;p&gt;Agora sim, vamos virar-nos para o ficheiro &lt;code&gt;admin.php&lt;/code&gt;. Neste ficheiro irá estar todo o código referente às opções de administração do tema.&lt;/p&gt;

&lt;p&gt;Neste tutorial, iremos criar uma variável com um dado que será depois utilizada no tema. Assim, aprendem como se faz e depois podem criar vocês próprios as opções que quiserem.&lt;/p&gt;

&lt;p&gt;Vamos começar por criar a seguinte função:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_admin_menus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//Colocaremos aqui os menus&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;add_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;admin_menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_admin_menus&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Não se esqueça de substituir &lt;code&gt;themeslug&lt;/code&gt; pelo prefixo das funções do seu tema. Criámos uma pequena função que vai servir para adicionar os menus à barra de administração do WordPress.&lt;/p&gt;

&lt;p&gt;Depois adicionamos essa função utilizando a função add_action . Este comando liga uma &lt;strong&gt;função&lt;/strong&gt; a uma &lt;strong&gt;ação&lt;/strong&gt;. Podem ler mais sobre a mesma &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/add_action&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem várias formas de adicionar um menu. Podemos adicionar um sub-menu ou um menu. Vou dar-vos um exemplo com algo já existente no WP:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://henriquedias.com/images/wpsubmenu.png&#34; alt=&#34;WordPress Menu e Sub-menu&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Settings&lt;/strong&gt; é um menu.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Media&lt;/strong&gt; é um sub-menu do menu &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para adicionar um sub-menu a um menu, utilizamos a função &lt;code&gt;add_theme_page&lt;/code&gt; que tem a seguinte sintaxe:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;add_theme_page( $titulo_da_pagina, $titulo_do_menu, $permissoes, $slug_do_menu, $funcao);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos por partes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$titulo_da_pagina&lt;/code&gt;  -&amp;gt; Obviamente que é o título da página;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$titulo_do_menu&lt;/code&gt;  -&amp;gt; Nome que irá aparecer na barra de administração;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$permissoes&lt;/code&gt;  -&amp;gt; O mínimo de permissões que o utilizador deve ter para aceder à página;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$slug_do_menu&lt;/code&gt;  -&amp;gt; O nome do menu sem caracteres especiais e sem maiúsculas para ser utilizado no URL;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$funcao&lt;/code&gt;  -&amp;gt; A função que vai &amp;ldquo;tratar&amp;rdquo; deste sub-menu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para criar um menu de nível principal (como &lt;em&gt;Settings&lt;/em&gt;), utiliza-se a seguinte sintaxe:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;add_menu_page( $titulo_da_pag, $titulo_do_menu, $permissoes, $slug_do_menu, $funcao, $icon_url, $posicao );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A sintaxe é muito parecida mas conta com mais duas variáveis. A &lt;code&gt;$icon_url&lt;/code&gt; serve para indicar o caminho do ícone e $posicao  é a posição na barra lateral da &lt;em&gt;dashboard&lt;/em&gt;. Ambas são opções opcionais e podes ler mais sobre elas &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/add_menu_page&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vamos, finalmente, criar o menu. Já conhecendo a sintaxe, vou substituir o comentário que escrevemos no ficheiro &lt;code&gt;admin.php&lt;/code&gt; pela criação de um sub-menu ficando o código da seguinte forma:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_admin_menus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//Adição do sub-menu Opções ao menu principal Apresentação&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;add_theme_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Opções&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;manage_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;opcoes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;themeslug_options&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;themeslug_options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//Esta função vai conter a página &amp;quot;Opções&amp;quot;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;add_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;admin_menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;themeslug_admin_menus&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora, quando voltarem à &lt;em&gt;dashboard&lt;/em&gt; do WordPress, já lá deverão ter o novo menu.&lt;/p&gt;

&lt;p&gt;Se abrirem a página vão ver que ainda não existe nada nessa página. Como este tutorial está a ficar um pouco extenso, deixarei a criação de uma opção e a sua aplicação para a segunda parte deste tutorial que &lt;del&gt;deve chegar dentro de dois ou três dias&lt;/del&gt; podes encontrar &lt;a href=&#34;https://henriquedias.com/tutorials/wordpress-adicionar-menus-de-administracao-parte-2/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esperamos que o tutorial vos tenha sido útil.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
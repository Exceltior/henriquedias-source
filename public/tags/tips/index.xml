<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on Henrique Dias</title>
    <link>http://localhost:1313/tags/tips/</link>
    <description>Recent content in Tips on Henrique Dias</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Jul 2014 08:34:52 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criar identificadores únicos em PHP</title>
      <link>http://localhost:1313/tutorials/criar-identificadores-unicos-php</link>
      <pubDate>Wed, 30 Jul 2014 08:34:52 +0000</pubDate>
      
      <guid>http://localhost:1313/tutorials/criar-identificadores-unicos-php</guid>
      <description>&lt;p&gt;Como deve saber, PHP é umas das linguagens de servidor mais utilizadas no mundo. Hoje vou mostrar-vos uma fantástica forma de gerar &lt;strong&gt;IDs (identificadores) únicos&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O método para o fazer chama-se &lt;strong&gt;uniqid()&lt;/strong&gt; e deve ser utilizado da seguinte forma.&lt;/p&gt;

&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;string uniqid ([ string $prefix = &amp;quot;&amp;quot; [, bool $more_entropy = false ]] )&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Esta função cria um ID baseado nas horas atuais em microssegundos logo não são criados números aleatórios. Se chamar esta função sem quaisquer parâmetros, o PHP irá fornecer-lhe um conjunto de 13 caracteres. Exemplo:&lt;/p&gt;

&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid() . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;E eu recebi o seguinte:&lt;/p&gt;

&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;540f25baa463c&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4644&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4647&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4649&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa464c&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa464f&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4652&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4654&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4657&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;540f25baa4659&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Como pode ver, existe um padrão que é seguido em cada entrada. Agora, vamos tornar isto mais interessante com prefixos. O primeiro parâmetro pode aer utilizado para prefixos. Exemplo:&lt;/p&gt;

&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid(&amp;#39;id.&amp;#39;) . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;// =&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab54&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab61&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab65&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab6a&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab6e&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab73&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab78&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab7d&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab80&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;id.53d8a6b00ab85&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Antes de continuarmos para o segundo parâmetro vamos tornar isto mais divertido utilizando a função &lt;code&gt;rand()&lt;/code&gt; para os prefixos como seguinte:&lt;/p&gt;

&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid(rand()) . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;// =&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;1847953d8a7a793dad&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1593253d8a7a793dc6&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;3066153d8a7a793dd3&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1359453d8a7a793de0&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1441153d8a7a793ded&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;55253d8a7a793df9&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1926553d8a7a793e05&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;227853d8a7a793e11&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;362353d8a7a793e1d&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;635653d8a7a793e2a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Pode aprender mais sobre esta função aqui &lt;a href=&#34;http://pt2.php.net/manual/en/function.rand.php&#34;&gt;aqui&lt;/a&gt;. Podemos também ativar a entropia utilizando o segundo parâmetro.&lt;/p&gt;

&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;for ($i = 0; $i &amp;lt; 10; $i++) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  echo uniqid(NULL,  true) . &amp;#39;&amp;lt;br&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;// =&amp;gt;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;53d8a804e20009.43950771&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e201f6.55814947&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e20303.56124572&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e203f8.58127959&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e204e1.29334755&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e205d8.15855084&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e206c1.12343150&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e207b1.83476235&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e208b5.92283530&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;53d8a804e209d6.58175306&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Com entropia activada, o tamanho do conjunto passa de 13 a 23 caracteres. Podemos ainda utilizar a entropia com o comando &lt;code&gt;rand()&lt;/code&gt; ao mesmo tempo:&lt;/p&gt;

&lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;linenos&#34;&gt;&lt;div class=&#34;linenodiv&#34;&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;x&#34;&gt;654753d8a87287e1c6.37774954&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;2401653d8a87287e2e3.55006223&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;45753d8a87287e363.99897593&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1249453d8a87287e3d4.10326514&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1534353d8a87287e451.40348788&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;178853d8a87287e4c0.49212408&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;2906153d8a87287e547.79619666&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;303453d8a87287e5c2.76725867&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;1025153d8a87287e649.36971601&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;586453d8a87287e6c7.26848089&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Isto é bom para quando se tem mais de um servidor a correr a mesma aplicação. Assim evitam-se possíveis erros causados por IDs iguais. Como assim? Se tiverem dois ou mais servidores a correr a mesma aplicação, pode acontecer algum correr o comando no mesmo micro segundo.&lt;/p&gt;

&lt;p&gt;É isto. :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
